# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: blob.proto for package 'gitaly'

require 'grpc'
require 'blob_pb'

module Gitaly
  module BlobService
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'gitaly.BlobService'

      # GetBlob returns the contents of a blob object referenced by its object
      # ID. We use a stream to return a chunked arbitrarily large binary
      # response
      rpc :GetBlob, GetBlobRequest, stream(GetBlobResponse)
      # GetBlobsBySHA returns the contents of a blob objects referenced by their object
      # ID. We use a stream to return a chunked arbitrarily large binary response.
      # The blobs are sent in a continous stream, the caller is responsible for spliting
      # them up into multiple blobs by their object IDs.
      rpc :GetBlobs, GetBlobsRequest, stream(GetBlobsResponse)
      # ListBlobsByRevisionPath returns the blob for each (commit_oid, path) passed in
      # Commit oid and path can vary between each request and might not have any relation to each other
      rpc :ListBlobsByRevisionPaths, ListBlobsByRevisionPathsRequest, stream(ListBlobsByRevisionPathsResponse)
    end

    Stub = Service.rpc_stub_class
  end
end
