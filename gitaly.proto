syntax = "proto3";

package gitaly;

// The Git 'smart HTTP' protocol
service SmartHTTP {
  // The response body for GET /info/refs?service=git-upload-pack
  rpc InfoRefsUploadPack(InfoRefsRequest) returns (stream InfoRefsResponse) {}

  // The response body for GET /info/refs?service=git-receive-pack
  rpc InfoRefsReceivePack(InfoRefsRequest) returns (stream InfoRefsResponse) {}
}

service Notifications {
  rpc PostReceive(PostReceiveRequest) returns (PostReceiveResponse) {}
}

service Ref {
  rpc FindDefaultBranchName(FindDefaultBranchNameRequest) returns (FindDefaultBranchNameResponse) {}
  rpc FindAllBranchNames(FindAllBranchNamesRequest) returns (stream FindAllBranchNamesResponse) {}
  rpc FindAllTagNames(FindAllTagNamesRequest) returns (stream FindAllTagNamesResponse) {}
}

message InfoRefsRequest {
  Repository repository = 1;
}

message InfoRefsResponse {
  bytes data = 1;
}

message Repository {
  string path = 1;
}

message PostReceiveRequest {
  Repository repository = 1;
}

message PostReceiveResponse {}

message FindDefaultBranchNameRequest {
  Repository repository = 1;
}

message FindAllBranchNamesRequest {
  Repository repository = 1;
}

message FindAllTagNamesRequest {
  Repository repository = 1;
}

message FindDefaultBranchNameResponse {
  bytes name = 1;
}

message FindAllBranchNamesResponse {
  repeated bytes names = 1;
}

message FindAllTagNamesResponse {
  repeated bytes names = 1;
}
