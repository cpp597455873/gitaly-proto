syntax = "proto3";

package gitaly;

// The Git 'smart HTTP' protocol
service SmartHTTP {
  // The response body for GET /info/refs?service=git-upload-pack
  rpc InfoRefsUploadPack(InfoRefsRequest) returns (stream InfoRefsResponse) {}

  // The response body for GET /info/refs?service=git-receive-pack
  rpc InfoRefsReceivePack(InfoRefsRequest) returns (stream InfoRefsResponse) {}
}

service Notifications {
  rpc PostReceive(PostReceiveRequest) returns (PostReceiveResponse) {}
}

service Diff {
 // Returns stream of CommitDiffResponse: 1 per changed file
  rpc CommitDiff(CommitDiffRequest) returns (stream CommitDiffResponse) {};
}

message InfoRefsRequest {
  Repository repository = 1;
}

message InfoRefsResponse {
  bytes data = 1;
}

message Repository {
  string path = 1;
}

message PostReceiveRequest {
  Repository repository = 1;
}

message PostReceiveResponse {}

message CommitDiffRequest {
  Repository repository = 1;
  string left_commit_id = 2;
  string right_commit_id = 3;
}

// A CommitDiffResponse corresponds to a single changed file in a commit.
message CommitDiffResponse {
  bytes from_path = 1;
  bytes to_path = 2;
  // Blob ID as returned via `git diff --full-index`
  string from_id = 3;
  string to_id = 4;
  int32 old_mode = 5;
  int32 new_mode = 6;
  bool binary = 7;
  repeated bytes raw_chunks = 8;
}
