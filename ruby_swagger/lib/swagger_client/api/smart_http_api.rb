=begin
#commit.proto

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: version not set

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class SmartHTTPApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # The response body for GET /info/refs?service=git-receive-pack
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GitalyInfoRefsResponse]
    def info_refs_receive_pack(body, opts = {})
      data, _status_code, _headers = info_refs_receive_pack_with_http_info(body, opts)
      return data
    end

    # The response body for GET /info/refs?service&#x3D;git-receive-pack
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GitalyInfoRefsResponse, Fixnum, Hash)>] GitalyInfoRefsResponse data, response status code and response headers
    def info_refs_receive_pack_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SmartHTTPApi.info_refs_receive_pack ..."
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling SmartHTTPApi.info_refs_receive_pack" if body.nil?
      # resource path
      local_var_path = "/v1/smart_http/info_refs_receive_pack".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GitalyInfoRefsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SmartHTTPApi#info_refs_receive_pack\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # The response body for GET /info/refs?service=git-upload-pack
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GitalyInfoRefsResponse]
    def info_refs_upload_pack(body, opts = {})
      data, _status_code, _headers = info_refs_upload_pack_with_http_info(body, opts)
      return data
    end

    # The response body for GET /info/refs?service&#x3D;git-upload-pack
    # 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GitalyInfoRefsResponse, Fixnum, Hash)>] GitalyInfoRefsResponse data, response status code and response headers
    def info_refs_upload_pack_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SmartHTTPApi.info_refs_upload_pack ..."
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling SmartHTTPApi.info_refs_upload_pack" if body.nil?
      # resource path
      local_var_path = "/v1/smart_http/info_refs_upload_pack".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GitalyInfoRefsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SmartHTTPApi#info_refs_upload_pack\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Request and response body for POST /receive-pack
    # 
    # @param body (streaming inputs)
    # @param [Hash] opts the optional parameters
    # @return [GitalyPostReceivePackResponse]
    def post_receive_pack(body, opts = {})
      data, _status_code, _headers = post_receive_pack_with_http_info(body, opts)
      return data
    end

    # Request and response body for POST /receive-pack
    # 
    # @param body (streaming inputs)
    # @param [Hash] opts the optional parameters
    # @return [Array<(GitalyPostReceivePackResponse, Fixnum, Hash)>] GitalyPostReceivePackResponse data, response status code and response headers
    def post_receive_pack_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SmartHTTPApi.post_receive_pack ..."
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling SmartHTTPApi.post_receive_pack" if body.nil?
      # resource path
      local_var_path = "/v1/smart_http/post_receive_pack".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GitalyPostReceivePackResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SmartHTTPApi#post_receive_pack\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Request and response body for POST /upload-pack
    # 
    # @param body (streaming inputs)
    # @param [Hash] opts the optional parameters
    # @return [GitalyPostUploadPackResponse]
    def post_upload_pack(body, opts = {})
      data, _status_code, _headers = post_upload_pack_with_http_info(body, opts)
      return data
    end

    # Request and response body for POST /upload-pack
    # 
    # @param body (streaming inputs)
    # @param [Hash] opts the optional parameters
    # @return [Array<(GitalyPostUploadPackResponse, Fixnum, Hash)>] GitalyPostUploadPackResponse data, response status code and response headers
    def post_upload_pack_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: SmartHTTPApi.post_upload_pack ..."
      end
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling SmartHTTPApi.post_upload_pack" if body.nil?
      # resource path
      local_var_path = "/v1/smart_http/post_upload_pack".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GitalyPostUploadPackResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SmartHTTPApi#post_upload_pack\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
