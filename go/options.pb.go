// Code generated by protoc-gen-go.
// source: options.proto
// DO NOT EDIT!

package gitaly

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "google/protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FeatureStatus_StatusType int32

const (
	FeatureStatus_DISABLED FeatureStatus_StatusType = 0
	FeatureStatus_OPT_IN   FeatureStatus_StatusType = 1
	FeatureStatus_OPT_OUT  FeatureStatus_StatusType = 2
	FeatureStatus_ENABLED  FeatureStatus_StatusType = 3
)

var FeatureStatus_StatusType_name = map[int32]string{
	0: "DISABLED",
	1: "OPT_IN",
	2: "OPT_OUT",
	3: "ENABLED",
}
var FeatureStatus_StatusType_value = map[string]int32{
	"DISABLED": 0,
	"OPT_IN":   1,
	"OPT_OUT":  2,
	"ENABLED":  3,
}

func (x FeatureStatus_StatusType) String() string {
	return proto.EnumName(FeatureStatus_StatusType_name, int32(x))
}
func (FeatureStatus_StatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

type FeatureStatus struct {
	// The type of data that can be assigned to the label.
	Status FeatureStatus_StatusType `protobuf:"varint,1,opt,name=status,enum=gitaly.FeatureStatus_StatusType" json:"status,omitempty"`
	// The label key.
	FeatureFlag string `protobuf:"bytes,2,opt,name=feature_flag,json=featureFlag" json:"feature_flag,omitempty"`
}

func (m *FeatureStatus) Reset()                    { *m = FeatureStatus{} }
func (m *FeatureStatus) String() string            { return proto.CompactTextString(m) }
func (*FeatureStatus) ProtoMessage()               {}
func (*FeatureStatus) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *FeatureStatus) GetStatus() FeatureStatus_StatusType {
	if m != nil {
		return m.Status
	}
	return FeatureStatus_DISABLED
}

func (m *FeatureStatus) GetFeatureFlag() string {
	if m != nil {
		return m.FeatureFlag
	}
	return ""
}

var E_FeatureStatus = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*FeatureStatus)(nil),
	Field:         50000,
	Name:          "gitaly.feature_status",
	Tag:           "bytes,50000,opt,name=feature_status,json=featureStatus",
	Filename:      "options.proto",
}

func init() {
	proto.RegisterType((*FeatureStatus)(nil), "gitaly.FeatureStatus")
	proto.RegisterEnum("gitaly.FeatureStatus_StatusType", FeatureStatus_StatusType_name, FeatureStatus_StatusType_value)
	proto.RegisterExtension(E_FeatureStatus)
}

func init() { proto.RegisterFile("options.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x2f, 0x28, 0xc9,
	0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xcf, 0x2c, 0x49, 0xcc,
	0xa9, 0x94, 0x52, 0x48, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x26, 0x95, 0xa6, 0xe9,
	0xa7, 0xa4, 0x16, 0x27, 0x17, 0x65, 0x16, 0x94, 0xe4, 0x17, 0x41, 0x54, 0x2a, 0xad, 0x63, 0xe4,
	0xe2, 0x75, 0x4b, 0x4d, 0x2c, 0x29, 0x2d, 0x4a, 0x0d, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x16, 0xb2,
	0xe0, 0x62, 0x2b, 0x06, 0xb3, 0x24, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0x14, 0xf4, 0x20, 0x86,
	0xe9, 0xa1, 0x28, 0xd3, 0x83, 0x50, 0x21, 0x95, 0x05, 0xa9, 0x41, 0x50, 0xf5, 0x42, 0x8a, 0x5c,
	0x3c, 0x69, 0x10, 0x35, 0xf1, 0x69, 0x39, 0x89, 0xe9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0xdc, 0x50, 0x31, 0xb7, 0x9c, 0xc4, 0x74, 0x25, 0x07, 0x2e, 0x2e, 0x84, 0x46, 0x21, 0x1e, 0x2e,
	0x0e, 0x17, 0xcf, 0x60, 0x47, 0x27, 0x1f, 0x57, 0x17, 0x01, 0x06, 0x21, 0x2e, 0x2e, 0x36, 0xff,
	0x80, 0x90, 0x78, 0x4f, 0x3f, 0x01, 0x46, 0x21, 0x6e, 0x2e, 0x76, 0x10, 0xdb, 0x3f, 0x34, 0x44,
	0x80, 0x09, 0xc4, 0x71, 0xf5, 0x83, 0xa8, 0x62, 0xb6, 0x8a, 0xe3, 0xe2, 0x83, 0x59, 0x02, 0xb5,
	0x56, 0x4e, 0x0f, 0xe2, 0x4b, 0x3d, 0x98, 0x2f, 0xf5, 0x7c, 0x53, 0x4b, 0x32, 0xf2, 0x53, 0xfc,
	0x21, 0x41, 0x22, 0x71, 0xa1, 0x8d, 0x59, 0x81, 0x51, 0x83, 0xdb, 0x48, 0x14, 0xab, 0x47, 0x82,
	0x78, 0xd3, 0x90, 0xb9, 0x49, 0x6c, 0x60, 0x53, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5b,
	0x7d, 0xd7, 0xec, 0x52, 0x01, 0x00, 0x00,
}
