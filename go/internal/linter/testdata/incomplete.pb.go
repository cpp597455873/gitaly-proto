// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go/internal/linter/testdata/incomplete.proto

package test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IncompleteMethodRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncompleteMethodRequest) Reset()         { *m = IncompleteMethodRequest{} }
func (m *IncompleteMethodRequest) String() string { return proto.CompactTextString(m) }
func (*IncompleteMethodRequest) ProtoMessage()    {}
func (*IncompleteMethodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_incomplete_a2b95c1dd2de6c6e, []int{0}
}
func (m *IncompleteMethodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncompleteMethodRequest.Unmarshal(m, b)
}
func (m *IncompleteMethodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncompleteMethodRequest.Marshal(b, m, deterministic)
}
func (dst *IncompleteMethodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncompleteMethodRequest.Merge(dst, src)
}
func (m *IncompleteMethodRequest) XXX_Size() int {
	return xxx_messageInfo_IncompleteMethodRequest.Size(m)
}
func (m *IncompleteMethodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncompleteMethodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncompleteMethodRequest proto.InternalMessageInfo

type IncompleteMethodResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncompleteMethodResponse) Reset()         { *m = IncompleteMethodResponse{} }
func (m *IncompleteMethodResponse) String() string { return proto.CompactTextString(m) }
func (*IncompleteMethodResponse) ProtoMessage()    {}
func (*IncompleteMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_incomplete_a2b95c1dd2de6c6e, []int{1}
}
func (m *IncompleteMethodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncompleteMethodResponse.Unmarshal(m, b)
}
func (m *IncompleteMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncompleteMethodResponse.Marshal(b, m, deterministic)
}
func (dst *IncompleteMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncompleteMethodResponse.Merge(dst, src)
}
func (m *IncompleteMethodResponse) XXX_Size() int {
	return xxx_messageInfo_IncompleteMethodResponse.Size(m)
}
func (m *IncompleteMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncompleteMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncompleteMethodResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*IncompleteMethodRequest)(nil), "test.IncompleteMethodRequest")
	proto.RegisterType((*IncompleteMethodResponse)(nil), "test.IncompleteMethodResponse")
}

func init() {
	proto.RegisterFile("go/internal/linter/testdata/incomplete.proto", fileDescriptor_incomplete_a2b95c1dd2de6c6e)
}

var fileDescriptor_incomplete_a2b95c1dd2de6c6e = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x49, 0xcf, 0xd7, 0xcf,
	0xcc, 0x2b, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0xcf, 0x01, 0xb3, 0xf4, 0x4b, 0x52, 0x8b, 0x4b,
	0x52, 0x12, 0x4b, 0x12, 0xf5, 0x33, 0xf3, 0x92, 0xf3, 0x73, 0x0b, 0x72, 0x52, 0x4b, 0x52, 0xf5,
	0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x58, 0x40, 0x52, 0x4a, 0x92, 0x5c, 0xe2, 0x9e, 0x70, 0x19,
	0xdf, 0xd4, 0x92, 0x8c, 0xfc, 0x94, 0xa0, 0xd4, 0xc2, 0x52, 0x90, 0x94, 0x14, 0x97, 0x04, 0xa6,
	0x54, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x51, 0x06, 0x97, 0x20, 0x42, 0x2e, 0x38, 0xb5, 0xa8,
	0x2c, 0x33, 0x39, 0x55, 0x28, 0x98, 0x4b, 0x00, 0x5d, 0x83, 0x90, 0xac, 0x1e, 0xc8, 0x1a, 0x3d,
	0x1c, 0x76, 0x48, 0xc9, 0xe1, 0x92, 0x86, 0xd8, 0xa3, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xad, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x15, 0xaa, 0x1f, 0xcf, 0xdd, 0x00, 0x00, 0x00,
}
