// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repository-service.proto

package gitalypb // import "gitlab.com/gitlab-org/gitaly-proto/go/gitalypb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetArchiveRequest_Format int32

const (
	GetArchiveRequest_ZIP     GetArchiveRequest_Format = 0
	GetArchiveRequest_TAR     GetArchiveRequest_Format = 1
	GetArchiveRequest_TAR_GZ  GetArchiveRequest_Format = 2
	GetArchiveRequest_TAR_BZ2 GetArchiveRequest_Format = 3
)

var GetArchiveRequest_Format_name = map[int32]string{
	0: "ZIP",
	1: "TAR",
	2: "TAR_GZ",
	3: "TAR_BZ2",
}
var GetArchiveRequest_Format_value = map[string]int32{
	"ZIP":     0,
	"TAR":     1,
	"TAR_GZ":  2,
	"TAR_BZ2": 3,
}

func (x GetArchiveRequest_Format) String() string {
	return proto.EnumName(GetArchiveRequest_Format_name, int32(x))
}
func (GetArchiveRequest_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{18, 0}
}

type GetRawChangesResponse_RawChange_Operation int32

const (
	GetRawChangesResponse_RawChange_UNKNOWN      GetRawChangesResponse_RawChange_Operation = 0
	GetRawChangesResponse_RawChange_ADDED        GetRawChangesResponse_RawChange_Operation = 1
	GetRawChangesResponse_RawChange_COPIED       GetRawChangesResponse_RawChange_Operation = 2
	GetRawChangesResponse_RawChange_DELETED      GetRawChangesResponse_RawChange_Operation = 3
	GetRawChangesResponse_RawChange_MODIFIED     GetRawChangesResponse_RawChange_Operation = 4
	GetRawChangesResponse_RawChange_RENAMED      GetRawChangesResponse_RawChange_Operation = 5
	GetRawChangesResponse_RawChange_TYPE_CHANGED GetRawChangesResponse_RawChange_Operation = 6
)

var GetRawChangesResponse_RawChange_Operation_name = map[int32]string{
	0: "UNKNOWN",
	1: "ADDED",
	2: "COPIED",
	3: "DELETED",
	4: "MODIFIED",
	5: "RENAMED",
	6: "TYPE_CHANGED",
}
var GetRawChangesResponse_RawChange_Operation_value = map[string]int32{
	"UNKNOWN":      0,
	"ADDED":        1,
	"COPIED":       2,
	"DELETED":      3,
	"MODIFIED":     4,
	"RENAMED":      5,
	"TYPE_CHANGED": 6,
}

func (x GetRawChangesResponse_RawChange_Operation) String() string {
	return proto.EnumName(GetRawChangesResponse_RawChange_Operation_name, int32(x))
}
func (GetRawChangesResponse_RawChange_Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{63, 0, 0}
}

type RepositoryExistsRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositoryExistsRequest) Reset()         { *m = RepositoryExistsRequest{} }
func (m *RepositoryExistsRequest) String() string { return proto.CompactTextString(m) }
func (*RepositoryExistsRequest) ProtoMessage()    {}
func (*RepositoryExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{0}
}
func (m *RepositoryExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryExistsRequest.Unmarshal(m, b)
}
func (m *RepositoryExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryExistsRequest.Marshal(b, m, deterministic)
}
func (dst *RepositoryExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryExistsRequest.Merge(dst, src)
}
func (m *RepositoryExistsRequest) XXX_Size() int {
	return xxx_messageInfo_RepositoryExistsRequest.Size(m)
}
func (m *RepositoryExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryExistsRequest proto.InternalMessageInfo

func (m *RepositoryExistsRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositoryExistsResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositoryExistsResponse) Reset()         { *m = RepositoryExistsResponse{} }
func (m *RepositoryExistsResponse) String() string { return proto.CompactTextString(m) }
func (*RepositoryExistsResponse) ProtoMessage()    {}
func (*RepositoryExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{1}
}
func (m *RepositoryExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryExistsResponse.Unmarshal(m, b)
}
func (m *RepositoryExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryExistsResponse.Marshal(b, m, deterministic)
}
func (dst *RepositoryExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryExistsResponse.Merge(dst, src)
}
func (m *RepositoryExistsResponse) XXX_Size() int {
	return xxx_messageInfo_RepositoryExistsResponse.Size(m)
}
func (m *RepositoryExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryExistsResponse proto.InternalMessageInfo

func (m *RepositoryExistsResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type RepackIncrementalRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepackIncrementalRequest) Reset()         { *m = RepackIncrementalRequest{} }
func (m *RepackIncrementalRequest) String() string { return proto.CompactTextString(m) }
func (*RepackIncrementalRequest) ProtoMessage()    {}
func (*RepackIncrementalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{2}
}
func (m *RepackIncrementalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackIncrementalRequest.Unmarshal(m, b)
}
func (m *RepackIncrementalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackIncrementalRequest.Marshal(b, m, deterministic)
}
func (dst *RepackIncrementalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackIncrementalRequest.Merge(dst, src)
}
func (m *RepackIncrementalRequest) XXX_Size() int {
	return xxx_messageInfo_RepackIncrementalRequest.Size(m)
}
func (m *RepackIncrementalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackIncrementalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepackIncrementalRequest proto.InternalMessageInfo

func (m *RepackIncrementalRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepackIncrementalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepackIncrementalResponse) Reset()         { *m = RepackIncrementalResponse{} }
func (m *RepackIncrementalResponse) String() string { return proto.CompactTextString(m) }
func (*RepackIncrementalResponse) ProtoMessage()    {}
func (*RepackIncrementalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{3}
}
func (m *RepackIncrementalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackIncrementalResponse.Unmarshal(m, b)
}
func (m *RepackIncrementalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackIncrementalResponse.Marshal(b, m, deterministic)
}
func (dst *RepackIncrementalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackIncrementalResponse.Merge(dst, src)
}
func (m *RepackIncrementalResponse) XXX_Size() int {
	return xxx_messageInfo_RepackIncrementalResponse.Size(m)
}
func (m *RepackIncrementalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackIncrementalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepackIncrementalResponse proto.InternalMessageInfo

type RepackFullRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CreateBitmap         bool        `protobuf:"varint,2,opt,name=create_bitmap,json=createBitmap,proto3" json:"create_bitmap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepackFullRequest) Reset()         { *m = RepackFullRequest{} }
func (m *RepackFullRequest) String() string { return proto.CompactTextString(m) }
func (*RepackFullRequest) ProtoMessage()    {}
func (*RepackFullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{4}
}
func (m *RepackFullRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackFullRequest.Unmarshal(m, b)
}
func (m *RepackFullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackFullRequest.Marshal(b, m, deterministic)
}
func (dst *RepackFullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackFullRequest.Merge(dst, src)
}
func (m *RepackFullRequest) XXX_Size() int {
	return xxx_messageInfo_RepackFullRequest.Size(m)
}
func (m *RepackFullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackFullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepackFullRequest proto.InternalMessageInfo

func (m *RepackFullRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *RepackFullRequest) GetCreateBitmap() bool {
	if m != nil {
		return m.CreateBitmap
	}
	return false
}

type RepackFullResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepackFullResponse) Reset()         { *m = RepackFullResponse{} }
func (m *RepackFullResponse) String() string { return proto.CompactTextString(m) }
func (*RepackFullResponse) ProtoMessage()    {}
func (*RepackFullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{5}
}
func (m *RepackFullResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepackFullResponse.Unmarshal(m, b)
}
func (m *RepackFullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepackFullResponse.Marshal(b, m, deterministic)
}
func (dst *RepackFullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepackFullResponse.Merge(dst, src)
}
func (m *RepackFullResponse) XXX_Size() int {
	return xxx_messageInfo_RepackFullResponse.Size(m)
}
func (m *RepackFullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepackFullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepackFullResponse proto.InternalMessageInfo

type GarbageCollectRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CreateBitmap         bool        `protobuf:"varint,2,opt,name=create_bitmap,json=createBitmap,proto3" json:"create_bitmap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GarbageCollectRequest) Reset()         { *m = GarbageCollectRequest{} }
func (m *GarbageCollectRequest) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectRequest) ProtoMessage()    {}
func (*GarbageCollectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{6}
}
func (m *GarbageCollectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectRequest.Unmarshal(m, b)
}
func (m *GarbageCollectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectRequest.Marshal(b, m, deterministic)
}
func (dst *GarbageCollectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectRequest.Merge(dst, src)
}
func (m *GarbageCollectRequest) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectRequest.Size(m)
}
func (m *GarbageCollectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectRequest proto.InternalMessageInfo

func (m *GarbageCollectRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *GarbageCollectRequest) GetCreateBitmap() bool {
	if m != nil {
		return m.CreateBitmap
	}
	return false
}

type GarbageCollectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GarbageCollectResponse) Reset()         { *m = GarbageCollectResponse{} }
func (m *GarbageCollectResponse) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectResponse) ProtoMessage()    {}
func (*GarbageCollectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{7}
}
func (m *GarbageCollectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectResponse.Unmarshal(m, b)
}
func (m *GarbageCollectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectResponse.Marshal(b, m, deterministic)
}
func (dst *GarbageCollectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectResponse.Merge(dst, src)
}
func (m *GarbageCollectResponse) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectResponse.Size(m)
}
func (m *GarbageCollectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectResponse proto.InternalMessageInfo

type CleanupRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CleanupRequest) Reset()         { *m = CleanupRequest{} }
func (m *CleanupRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupRequest) ProtoMessage()    {}
func (*CleanupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{8}
}
func (m *CleanupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupRequest.Unmarshal(m, b)
}
func (m *CleanupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupRequest.Marshal(b, m, deterministic)
}
func (dst *CleanupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupRequest.Merge(dst, src)
}
func (m *CleanupRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupRequest.Size(m)
}
func (m *CleanupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupRequest proto.InternalMessageInfo

func (m *CleanupRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type CleanupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupResponse) Reset()         { *m = CleanupResponse{} }
func (m *CleanupResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupResponse) ProtoMessage()    {}
func (*CleanupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{9}
}
func (m *CleanupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupResponse.Unmarshal(m, b)
}
func (m *CleanupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupResponse.Marshal(b, m, deterministic)
}
func (dst *CleanupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupResponse.Merge(dst, src)
}
func (m *CleanupResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupResponse.Size(m)
}
func (m *CleanupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupResponse proto.InternalMessageInfo

type RepositorySizeRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositorySizeRequest) Reset()         { *m = RepositorySizeRequest{} }
func (m *RepositorySizeRequest) String() string { return proto.CompactTextString(m) }
func (*RepositorySizeRequest) ProtoMessage()    {}
func (*RepositorySizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{10}
}
func (m *RepositorySizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositorySizeRequest.Unmarshal(m, b)
}
func (m *RepositorySizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositorySizeRequest.Marshal(b, m, deterministic)
}
func (dst *RepositorySizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositorySizeRequest.Merge(dst, src)
}
func (m *RepositorySizeRequest) XXX_Size() int {
	return xxx_messageInfo_RepositorySizeRequest.Size(m)
}
func (m *RepositorySizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositorySizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositorySizeRequest proto.InternalMessageInfo

func (m *RepositorySizeRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositorySizeResponse struct {
	// Repository size in kilobytes
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositorySizeResponse) Reset()         { *m = RepositorySizeResponse{} }
func (m *RepositorySizeResponse) String() string { return proto.CompactTextString(m) }
func (*RepositorySizeResponse) ProtoMessage()    {}
func (*RepositorySizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{11}
}
func (m *RepositorySizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositorySizeResponse.Unmarshal(m, b)
}
func (m *RepositorySizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositorySizeResponse.Marshal(b, m, deterministic)
}
func (dst *RepositorySizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositorySizeResponse.Merge(dst, src)
}
func (m *RepositorySizeResponse) XXX_Size() int {
	return xxx_messageInfo_RepositorySizeResponse.Size(m)
}
func (m *RepositorySizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositorySizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositorySizeResponse proto.InternalMessageInfo

func (m *RepositorySizeResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ApplyGitattributesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Revision             []byte      `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ApplyGitattributesRequest) Reset()         { *m = ApplyGitattributesRequest{} }
func (m *ApplyGitattributesRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyGitattributesRequest) ProtoMessage()    {}
func (*ApplyGitattributesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{12}
}
func (m *ApplyGitattributesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyGitattributesRequest.Unmarshal(m, b)
}
func (m *ApplyGitattributesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyGitattributesRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyGitattributesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyGitattributesRequest.Merge(dst, src)
}
func (m *ApplyGitattributesRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyGitattributesRequest.Size(m)
}
func (m *ApplyGitattributesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyGitattributesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyGitattributesRequest proto.InternalMessageInfo

func (m *ApplyGitattributesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ApplyGitattributesRequest) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

type ApplyGitattributesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyGitattributesResponse) Reset()         { *m = ApplyGitattributesResponse{} }
func (m *ApplyGitattributesResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyGitattributesResponse) ProtoMessage()    {}
func (*ApplyGitattributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{13}
}
func (m *ApplyGitattributesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyGitattributesResponse.Unmarshal(m, b)
}
func (m *ApplyGitattributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyGitattributesResponse.Marshal(b, m, deterministic)
}
func (dst *ApplyGitattributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyGitattributesResponse.Merge(dst, src)
}
func (m *ApplyGitattributesResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyGitattributesResponse.Size(m)
}
func (m *ApplyGitattributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyGitattributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyGitattributesResponse proto.InternalMessageInfo

type FetchRemoteRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Remote               string      `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Force                bool        `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	NoTags               bool        `protobuf:"varint,4,opt,name=no_tags,json=noTags,proto3" json:"no_tags,omitempty"`
	Timeout              int32       `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	SshKey               string      `protobuf:"bytes,6,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	KnownHosts           string      `protobuf:"bytes,7,opt,name=known_hosts,json=knownHosts,proto3" json:"known_hosts,omitempty"`
	NoPrune              bool        `protobuf:"varint,9,opt,name=no_prune,json=noPrune,proto3" json:"no_prune,omitempty"`
	RemoteParams         *Remote     `protobuf:"bytes,10,opt,name=remote_params,json=remoteParams,proto3" json:"remote_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchRemoteRequest) Reset()         { *m = FetchRemoteRequest{} }
func (m *FetchRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRemoteRequest) ProtoMessage()    {}
func (*FetchRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{14}
}
func (m *FetchRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRemoteRequest.Unmarshal(m, b)
}
func (m *FetchRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRemoteRequest.Marshal(b, m, deterministic)
}
func (dst *FetchRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRemoteRequest.Merge(dst, src)
}
func (m *FetchRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRemoteRequest.Size(m)
}
func (m *FetchRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRemoteRequest proto.InternalMessageInfo

func (m *FetchRemoteRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FetchRemoteRequest) GetRemote() string {
	if m != nil {
		return m.Remote
	}
	return ""
}

func (m *FetchRemoteRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *FetchRemoteRequest) GetNoTags() bool {
	if m != nil {
		return m.NoTags
	}
	return false
}

func (m *FetchRemoteRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *FetchRemoteRequest) GetSshKey() string {
	if m != nil {
		return m.SshKey
	}
	return ""
}

func (m *FetchRemoteRequest) GetKnownHosts() string {
	if m != nil {
		return m.KnownHosts
	}
	return ""
}

func (m *FetchRemoteRequest) GetNoPrune() bool {
	if m != nil {
		return m.NoPrune
	}
	return false
}

func (m *FetchRemoteRequest) GetRemoteParams() *Remote {
	if m != nil {
		return m.RemoteParams
	}
	return nil
}

type FetchRemoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRemoteResponse) Reset()         { *m = FetchRemoteResponse{} }
func (m *FetchRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*FetchRemoteResponse) ProtoMessage()    {}
func (*FetchRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{15}
}
func (m *FetchRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRemoteResponse.Unmarshal(m, b)
}
func (m *FetchRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRemoteResponse.Marshal(b, m, deterministic)
}
func (dst *FetchRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRemoteResponse.Merge(dst, src)
}
func (m *FetchRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_FetchRemoteResponse.Size(m)
}
func (m *FetchRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRemoteResponse proto.InternalMessageInfo

type CreateRepositoryRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryRequest) Reset()         { *m = CreateRepositoryRequest{} }
func (m *CreateRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryRequest) ProtoMessage()    {}
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{16}
}
func (m *CreateRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryRequest.Merge(dst, src)
}
func (m *CreateRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryRequest.Size(m)
}
func (m *CreateRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryRequest proto.InternalMessageInfo

func (m *CreateRepositoryRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type CreateRepositoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryResponse) Reset()         { *m = CreateRepositoryResponse{} }
func (m *CreateRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryResponse) ProtoMessage()    {}
func (*CreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{17}
}
func (m *CreateRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryResponse.Merge(dst, src)
}
func (m *CreateRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryResponse.Size(m)
}
func (m *CreateRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryResponse proto.InternalMessageInfo

type GetArchiveRequest struct {
	Repository           *Repository              `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	CommitId             string                   `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Prefix               string                   `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Format               GetArchiveRequest_Format `protobuf:"varint,4,opt,name=format,proto3,enum=gitaly.GetArchiveRequest_Format" json:"format,omitempty"`
	Path                 []byte                   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetArchiveRequest) Reset()         { *m = GetArchiveRequest{} }
func (m *GetArchiveRequest) String() string { return proto.CompactTextString(m) }
func (*GetArchiveRequest) ProtoMessage()    {}
func (*GetArchiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{18}
}
func (m *GetArchiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArchiveRequest.Unmarshal(m, b)
}
func (m *GetArchiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArchiveRequest.Marshal(b, m, deterministic)
}
func (dst *GetArchiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArchiveRequest.Merge(dst, src)
}
func (m *GetArchiveRequest) XXX_Size() int {
	return xxx_messageInfo_GetArchiveRequest.Size(m)
}
func (m *GetArchiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArchiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArchiveRequest proto.InternalMessageInfo

func (m *GetArchiveRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *GetArchiveRequest) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *GetArchiveRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *GetArchiveRequest) GetFormat() GetArchiveRequest_Format {
	if m != nil {
		return m.Format
	}
	return GetArchiveRequest_ZIP
}

func (m *GetArchiveRequest) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

type GetArchiveResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArchiveResponse) Reset()         { *m = GetArchiveResponse{} }
func (m *GetArchiveResponse) String() string { return proto.CompactTextString(m) }
func (*GetArchiveResponse) ProtoMessage()    {}
func (*GetArchiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{19}
}
func (m *GetArchiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArchiveResponse.Unmarshal(m, b)
}
func (m *GetArchiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArchiveResponse.Marshal(b, m, deterministic)
}
func (dst *GetArchiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArchiveResponse.Merge(dst, src)
}
func (m *GetArchiveResponse) XXX_Size() int {
	return xxx_messageInfo_GetArchiveResponse.Size(m)
}
func (m *GetArchiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArchiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArchiveResponse proto.InternalMessageInfo

func (m *GetArchiveResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HasLocalBranchesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HasLocalBranchesRequest) Reset()         { *m = HasLocalBranchesRequest{} }
func (m *HasLocalBranchesRequest) String() string { return proto.CompactTextString(m) }
func (*HasLocalBranchesRequest) ProtoMessage()    {}
func (*HasLocalBranchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{20}
}
func (m *HasLocalBranchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasLocalBranchesRequest.Unmarshal(m, b)
}
func (m *HasLocalBranchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasLocalBranchesRequest.Marshal(b, m, deterministic)
}
func (dst *HasLocalBranchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasLocalBranchesRequest.Merge(dst, src)
}
func (m *HasLocalBranchesRequest) XXX_Size() int {
	return xxx_messageInfo_HasLocalBranchesRequest.Size(m)
}
func (m *HasLocalBranchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasLocalBranchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasLocalBranchesRequest proto.InternalMessageInfo

func (m *HasLocalBranchesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type HasLocalBranchesResponse struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasLocalBranchesResponse) Reset()         { *m = HasLocalBranchesResponse{} }
func (m *HasLocalBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*HasLocalBranchesResponse) ProtoMessage()    {}
func (*HasLocalBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{21}
}
func (m *HasLocalBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasLocalBranchesResponse.Unmarshal(m, b)
}
func (m *HasLocalBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasLocalBranchesResponse.Marshal(b, m, deterministic)
}
func (dst *HasLocalBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasLocalBranchesResponse.Merge(dst, src)
}
func (m *HasLocalBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_HasLocalBranchesResponse.Size(m)
}
func (m *HasLocalBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasLocalBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasLocalBranchesResponse proto.InternalMessageInfo

func (m *HasLocalBranchesResponse) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type FetchSourceBranchRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	SourceRepository     *Repository `protobuf:"bytes,2,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	SourceBranch         []byte      `protobuf:"bytes,3,opt,name=source_branch,json=sourceBranch,proto3" json:"source_branch,omitempty"`
	TargetRef            []byte      `protobuf:"bytes,4,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchSourceBranchRequest) Reset()         { *m = FetchSourceBranchRequest{} }
func (m *FetchSourceBranchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchSourceBranchRequest) ProtoMessage()    {}
func (*FetchSourceBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{22}
}
func (m *FetchSourceBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchSourceBranchRequest.Unmarshal(m, b)
}
func (m *FetchSourceBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchSourceBranchRequest.Marshal(b, m, deterministic)
}
func (dst *FetchSourceBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchSourceBranchRequest.Merge(dst, src)
}
func (m *FetchSourceBranchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchSourceBranchRequest.Size(m)
}
func (m *FetchSourceBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchSourceBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchSourceBranchRequest proto.InternalMessageInfo

func (m *FetchSourceBranchRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetSourceRepository() *Repository {
	if m != nil {
		return m.SourceRepository
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetSourceBranch() []byte {
	if m != nil {
		return m.SourceBranch
	}
	return nil
}

func (m *FetchSourceBranchRequest) GetTargetRef() []byte {
	if m != nil {
		return m.TargetRef
	}
	return nil
}

type FetchSourceBranchResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchSourceBranchResponse) Reset()         { *m = FetchSourceBranchResponse{} }
func (m *FetchSourceBranchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchSourceBranchResponse) ProtoMessage()    {}
func (*FetchSourceBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{23}
}
func (m *FetchSourceBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchSourceBranchResponse.Unmarshal(m, b)
}
func (m *FetchSourceBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchSourceBranchResponse.Marshal(b, m, deterministic)
}
func (dst *FetchSourceBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchSourceBranchResponse.Merge(dst, src)
}
func (m *FetchSourceBranchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchSourceBranchResponse.Size(m)
}
func (m *FetchSourceBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchSourceBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchSourceBranchResponse proto.InternalMessageInfo

func (m *FetchSourceBranchResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type FsckRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FsckRequest) Reset()         { *m = FsckRequest{} }
func (m *FsckRequest) String() string { return proto.CompactTextString(m) }
func (*FsckRequest) ProtoMessage()    {}
func (*FsckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{24}
}
func (m *FsckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsckRequest.Unmarshal(m, b)
}
func (m *FsckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsckRequest.Marshal(b, m, deterministic)
}
func (dst *FsckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsckRequest.Merge(dst, src)
}
func (m *FsckRequest) XXX_Size() int {
	return xxx_messageInfo_FsckRequest.Size(m)
}
func (m *FsckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FsckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FsckRequest proto.InternalMessageInfo

func (m *FsckRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type FsckResponse struct {
	Error                []byte   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsckResponse) Reset()         { *m = FsckResponse{} }
func (m *FsckResponse) String() string { return proto.CompactTextString(m) }
func (*FsckResponse) ProtoMessage()    {}
func (*FsckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{25}
}
func (m *FsckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsckResponse.Unmarshal(m, b)
}
func (m *FsckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsckResponse.Marshal(b, m, deterministic)
}
func (dst *FsckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsckResponse.Merge(dst, src)
}
func (m *FsckResponse) XXX_Size() int {
	return xxx_messageInfo_FsckResponse.Size(m)
}
func (m *FsckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FsckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FsckResponse proto.InternalMessageInfo

func (m *FsckResponse) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

type WriteRefRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Ref                  []byte      `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Revision             []byte      `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	OldRevision          []byte      `protobuf:"bytes,4,opt,name=old_revision,json=oldRevision,proto3" json:"old_revision,omitempty"`
	Force                bool        `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WriteRefRequest) Reset()         { *m = WriteRefRequest{} }
func (m *WriteRefRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRefRequest) ProtoMessage()    {}
func (*WriteRefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{26}
}
func (m *WriteRefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRefRequest.Unmarshal(m, b)
}
func (m *WriteRefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRefRequest.Marshal(b, m, deterministic)
}
func (dst *WriteRefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRefRequest.Merge(dst, src)
}
func (m *WriteRefRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRefRequest.Size(m)
}
func (m *WriteRefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRefRequest proto.InternalMessageInfo

func (m *WriteRefRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *WriteRefRequest) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *WriteRefRequest) GetRevision() []byte {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *WriteRefRequest) GetOldRevision() []byte {
	if m != nil {
		return m.OldRevision
	}
	return nil
}

func (m *WriteRefRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type WriteRefResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRefResponse) Reset()         { *m = WriteRefResponse{} }
func (m *WriteRefResponse) String() string { return proto.CompactTextString(m) }
func (*WriteRefResponse) ProtoMessage()    {}
func (*WriteRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{27}
}
func (m *WriteRefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRefResponse.Unmarshal(m, b)
}
func (m *WriteRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRefResponse.Marshal(b, m, deterministic)
}
func (dst *WriteRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRefResponse.Merge(dst, src)
}
func (m *WriteRefResponse) XXX_Size() int {
	return xxx_messageInfo_WriteRefResponse.Size(m)
}
func (m *WriteRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRefResponse proto.InternalMessageInfo

type FindMergeBaseRequest struct {
	Repository *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	// We use a repeated field because rugged supports finding a base
	// for more than 2 revisions, so if we needed that in the future we don't
	// need to change the protocol.
	Revisions            [][]byte `protobuf:"bytes,2,rep,name=revisions,proto3" json:"revisions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMergeBaseRequest) Reset()         { *m = FindMergeBaseRequest{} }
func (m *FindMergeBaseRequest) String() string { return proto.CompactTextString(m) }
func (*FindMergeBaseRequest) ProtoMessage()    {}
func (*FindMergeBaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{28}
}
func (m *FindMergeBaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMergeBaseRequest.Unmarshal(m, b)
}
func (m *FindMergeBaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMergeBaseRequest.Marshal(b, m, deterministic)
}
func (dst *FindMergeBaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMergeBaseRequest.Merge(dst, src)
}
func (m *FindMergeBaseRequest) XXX_Size() int {
	return xxx_messageInfo_FindMergeBaseRequest.Size(m)
}
func (m *FindMergeBaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMergeBaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMergeBaseRequest proto.InternalMessageInfo

func (m *FindMergeBaseRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FindMergeBaseRequest) GetRevisions() [][]byte {
	if m != nil {
		return m.Revisions
	}
	return nil
}

type FindMergeBaseResponse struct {
	Base                 string   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMergeBaseResponse) Reset()         { *m = FindMergeBaseResponse{} }
func (m *FindMergeBaseResponse) String() string { return proto.CompactTextString(m) }
func (*FindMergeBaseResponse) ProtoMessage()    {}
func (*FindMergeBaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{29}
}
func (m *FindMergeBaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMergeBaseResponse.Unmarshal(m, b)
}
func (m *FindMergeBaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMergeBaseResponse.Marshal(b, m, deterministic)
}
func (dst *FindMergeBaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMergeBaseResponse.Merge(dst, src)
}
func (m *FindMergeBaseResponse) XXX_Size() int {
	return xxx_messageInfo_FindMergeBaseResponse.Size(m)
}
func (m *FindMergeBaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMergeBaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMergeBaseResponse proto.InternalMessageInfo

func (m *FindMergeBaseResponse) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

type CreateForkRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	SourceRepository     *Repository `protobuf:"bytes,2,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateForkRequest) Reset()         { *m = CreateForkRequest{} }
func (m *CreateForkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateForkRequest) ProtoMessage()    {}
func (*CreateForkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{30}
}
func (m *CreateForkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateForkRequest.Unmarshal(m, b)
}
func (m *CreateForkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateForkRequest.Marshal(b, m, deterministic)
}
func (dst *CreateForkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateForkRequest.Merge(dst, src)
}
func (m *CreateForkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateForkRequest.Size(m)
}
func (m *CreateForkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateForkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateForkRequest proto.InternalMessageInfo

func (m *CreateForkRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *CreateForkRequest) GetSourceRepository() *Repository {
	if m != nil {
		return m.SourceRepository
	}
	return nil
}

type CreateForkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateForkResponse) Reset()         { *m = CreateForkResponse{} }
func (m *CreateForkResponse) String() string { return proto.CompactTextString(m) }
func (*CreateForkResponse) ProtoMessage()    {}
func (*CreateForkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{31}
}
func (m *CreateForkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateForkResponse.Unmarshal(m, b)
}
func (m *CreateForkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateForkResponse.Marshal(b, m, deterministic)
}
func (dst *CreateForkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateForkResponse.Merge(dst, src)
}
func (m *CreateForkResponse) XXX_Size() int {
	return xxx_messageInfo_CreateForkResponse.Size(m)
}
func (m *CreateForkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateForkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateForkResponse proto.InternalMessageInfo

type IsRebaseInProgressRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	RebaseId             string      `protobuf:"bytes,2,opt,name=rebase_id,json=rebaseId,proto3" json:"rebase_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IsRebaseInProgressRequest) Reset()         { *m = IsRebaseInProgressRequest{} }
func (m *IsRebaseInProgressRequest) String() string { return proto.CompactTextString(m) }
func (*IsRebaseInProgressRequest) ProtoMessage()    {}
func (*IsRebaseInProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{32}
}
func (m *IsRebaseInProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRebaseInProgressRequest.Unmarshal(m, b)
}
func (m *IsRebaseInProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRebaseInProgressRequest.Marshal(b, m, deterministic)
}
func (dst *IsRebaseInProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRebaseInProgressRequest.Merge(dst, src)
}
func (m *IsRebaseInProgressRequest) XXX_Size() int {
	return xxx_messageInfo_IsRebaseInProgressRequest.Size(m)
}
func (m *IsRebaseInProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRebaseInProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsRebaseInProgressRequest proto.InternalMessageInfo

func (m *IsRebaseInProgressRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *IsRebaseInProgressRequest) GetRebaseId() string {
	if m != nil {
		return m.RebaseId
	}
	return ""
}

type IsRebaseInProgressResponse struct {
	InProgress           bool     `protobuf:"varint,1,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRebaseInProgressResponse) Reset()         { *m = IsRebaseInProgressResponse{} }
func (m *IsRebaseInProgressResponse) String() string { return proto.CompactTextString(m) }
func (*IsRebaseInProgressResponse) ProtoMessage()    {}
func (*IsRebaseInProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{33}
}
func (m *IsRebaseInProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRebaseInProgressResponse.Unmarshal(m, b)
}
func (m *IsRebaseInProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRebaseInProgressResponse.Marshal(b, m, deterministic)
}
func (dst *IsRebaseInProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRebaseInProgressResponse.Merge(dst, src)
}
func (m *IsRebaseInProgressResponse) XXX_Size() int {
	return xxx_messageInfo_IsRebaseInProgressResponse.Size(m)
}
func (m *IsRebaseInProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRebaseInProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsRebaseInProgressResponse proto.InternalMessageInfo

func (m *IsRebaseInProgressResponse) GetInProgress() bool {
	if m != nil {
		return m.InProgress
	}
	return false
}

type IsSquashInProgressRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	SquashId             string      `protobuf:"bytes,2,opt,name=squash_id,json=squashId,proto3" json:"squash_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IsSquashInProgressRequest) Reset()         { *m = IsSquashInProgressRequest{} }
func (m *IsSquashInProgressRequest) String() string { return proto.CompactTextString(m) }
func (*IsSquashInProgressRequest) ProtoMessage()    {}
func (*IsSquashInProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{34}
}
func (m *IsSquashInProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsSquashInProgressRequest.Unmarshal(m, b)
}
func (m *IsSquashInProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsSquashInProgressRequest.Marshal(b, m, deterministic)
}
func (dst *IsSquashInProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsSquashInProgressRequest.Merge(dst, src)
}
func (m *IsSquashInProgressRequest) XXX_Size() int {
	return xxx_messageInfo_IsSquashInProgressRequest.Size(m)
}
func (m *IsSquashInProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsSquashInProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsSquashInProgressRequest proto.InternalMessageInfo

func (m *IsSquashInProgressRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *IsSquashInProgressRequest) GetSquashId() string {
	if m != nil {
		return m.SquashId
	}
	return ""
}

type IsSquashInProgressResponse struct {
	InProgress           bool     `protobuf:"varint,1,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsSquashInProgressResponse) Reset()         { *m = IsSquashInProgressResponse{} }
func (m *IsSquashInProgressResponse) String() string { return proto.CompactTextString(m) }
func (*IsSquashInProgressResponse) ProtoMessage()    {}
func (*IsSquashInProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{35}
}
func (m *IsSquashInProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsSquashInProgressResponse.Unmarshal(m, b)
}
func (m *IsSquashInProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsSquashInProgressResponse.Marshal(b, m, deterministic)
}
func (dst *IsSquashInProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsSquashInProgressResponse.Merge(dst, src)
}
func (m *IsSquashInProgressResponse) XXX_Size() int {
	return xxx_messageInfo_IsSquashInProgressResponse.Size(m)
}
func (m *IsSquashInProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsSquashInProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsSquashInProgressResponse proto.InternalMessageInfo

func (m *IsSquashInProgressResponse) GetInProgress() bool {
	if m != nil {
		return m.InProgress
	}
	return false
}

type CreateRepositoryFromURLRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Url                  string      `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryFromURLRequest) Reset()         { *m = CreateRepositoryFromURLRequest{} }
func (m *CreateRepositoryFromURLRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromURLRequest) ProtoMessage()    {}
func (*CreateRepositoryFromURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{36}
}
func (m *CreateRepositoryFromURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromURLRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryFromURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromURLRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromURLRequest.Merge(dst, src)
}
func (m *CreateRepositoryFromURLRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromURLRequest.Size(m)
}
func (m *CreateRepositoryFromURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromURLRequest proto.InternalMessageInfo

func (m *CreateRepositoryFromURLRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *CreateRepositoryFromURLRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CreateRepositoryFromURLResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryFromURLResponse) Reset()         { *m = CreateRepositoryFromURLResponse{} }
func (m *CreateRepositoryFromURLResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromURLResponse) ProtoMessage()    {}
func (*CreateRepositoryFromURLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{37}
}
func (m *CreateRepositoryFromURLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromURLResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryFromURLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromURLResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromURLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromURLResponse.Merge(dst, src)
}
func (m *CreateRepositoryFromURLResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromURLResponse.Size(m)
}
func (m *CreateRepositoryFromURLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromURLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromURLResponse proto.InternalMessageInfo

type CreateBundleRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateBundleRequest) Reset()         { *m = CreateBundleRequest{} }
func (m *CreateBundleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBundleRequest) ProtoMessage()    {}
func (*CreateBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{38}
}
func (m *CreateBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleRequest.Unmarshal(m, b)
}
func (m *CreateBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleRequest.Marshal(b, m, deterministic)
}
func (dst *CreateBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleRequest.Merge(dst, src)
}
func (m *CreateBundleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBundleRequest.Size(m)
}
func (m *CreateBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleRequest proto.InternalMessageInfo

func (m *CreateBundleRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type CreateBundleResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBundleResponse) Reset()         { *m = CreateBundleResponse{} }
func (m *CreateBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBundleResponse) ProtoMessage()    {}
func (*CreateBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{39}
}
func (m *CreateBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleResponse.Unmarshal(m, b)
}
func (m *CreateBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleResponse.Marshal(b, m, deterministic)
}
func (dst *CreateBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleResponse.Merge(dst, src)
}
func (m *CreateBundleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBundleResponse.Size(m)
}
func (m *CreateBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleResponse proto.InternalMessageInfo

func (m *CreateBundleResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteConfigRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	FullPath             string      `protobuf:"bytes,2,opt,name=full_path,json=fullPath,proto3" json:"full_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WriteConfigRequest) Reset()         { *m = WriteConfigRequest{} }
func (m *WriteConfigRequest) String() string { return proto.CompactTextString(m) }
func (*WriteConfigRequest) ProtoMessage()    {}
func (*WriteConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{40}
}
func (m *WriteConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteConfigRequest.Unmarshal(m, b)
}
func (m *WriteConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteConfigRequest.Marshal(b, m, deterministic)
}
func (dst *WriteConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteConfigRequest.Merge(dst, src)
}
func (m *WriteConfigRequest) XXX_Size() int {
	return xxx_messageInfo_WriteConfigRequest.Size(m)
}
func (m *WriteConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteConfigRequest proto.InternalMessageInfo

func (m *WriteConfigRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *WriteConfigRequest) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

type WriteConfigResponse struct {
	Error                []byte   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteConfigResponse) Reset()         { *m = WriteConfigResponse{} }
func (m *WriteConfigResponse) String() string { return proto.CompactTextString(m) }
func (*WriteConfigResponse) ProtoMessage()    {}
func (*WriteConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{41}
}
func (m *WriteConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteConfigResponse.Unmarshal(m, b)
}
func (m *WriteConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteConfigResponse.Marshal(b, m, deterministic)
}
func (dst *WriteConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteConfigResponse.Merge(dst, src)
}
func (m *WriteConfigResponse) XXX_Size() int {
	return xxx_messageInfo_WriteConfigResponse.Size(m)
}
func (m *WriteConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteConfigResponse proto.InternalMessageInfo

func (m *WriteConfigResponse) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

type SetConfigRequest struct {
	Repository           *Repository               `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Entries              []*SetConfigRequest_Entry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{42}
}
func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (dst *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(dst, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *SetConfigRequest) GetEntries() []*SetConfigRequest_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type SetConfigRequest_Entry struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*SetConfigRequest_Entry_ValueStr
	//	*SetConfigRequest_Entry_ValueInt32
	//	*SetConfigRequest_Entry_ValueBool
	Value                isSetConfigRequest_Entry_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SetConfigRequest_Entry) Reset()         { *m = SetConfigRequest_Entry{} }
func (m *SetConfigRequest_Entry) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest_Entry) ProtoMessage()    {}
func (*SetConfigRequest_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{42, 0}
}
func (m *SetConfigRequest_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest_Entry.Unmarshal(m, b)
}
func (m *SetConfigRequest_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest_Entry.Marshal(b, m, deterministic)
}
func (dst *SetConfigRequest_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest_Entry.Merge(dst, src)
}
func (m *SetConfigRequest_Entry) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest_Entry.Size(m)
}
func (m *SetConfigRequest_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest_Entry proto.InternalMessageInfo

func (m *SetConfigRequest_Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type isSetConfigRequest_Entry_Value interface {
	isSetConfigRequest_Entry_Value()
}

type SetConfigRequest_Entry_ValueStr struct {
	ValueStr string `protobuf:"bytes,2,opt,name=value_str,json=valueStr,proto3,oneof"`
}

type SetConfigRequest_Entry_ValueInt32 struct {
	ValueInt32 int32 `protobuf:"varint,3,opt,name=value_int32,json=valueInt32,proto3,oneof"`
}

type SetConfigRequest_Entry_ValueBool struct {
	ValueBool bool `protobuf:"varint,4,opt,name=value_bool,json=valueBool,proto3,oneof"`
}

func (*SetConfigRequest_Entry_ValueStr) isSetConfigRequest_Entry_Value() {}

func (*SetConfigRequest_Entry_ValueInt32) isSetConfigRequest_Entry_Value() {}

func (*SetConfigRequest_Entry_ValueBool) isSetConfigRequest_Entry_Value() {}

func (m *SetConfigRequest_Entry) GetValue() isSetConfigRequest_Entry_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetConfigRequest_Entry) GetValueStr() string {
	if x, ok := m.GetValue().(*SetConfigRequest_Entry_ValueStr); ok {
		return x.ValueStr
	}
	return ""
}

func (m *SetConfigRequest_Entry) GetValueInt32() int32 {
	if x, ok := m.GetValue().(*SetConfigRequest_Entry_ValueInt32); ok {
		return x.ValueInt32
	}
	return 0
}

func (m *SetConfigRequest_Entry) GetValueBool() bool {
	if x, ok := m.GetValue().(*SetConfigRequest_Entry_ValueBool); ok {
		return x.ValueBool
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SetConfigRequest_Entry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SetConfigRequest_Entry_OneofMarshaler, _SetConfigRequest_Entry_OneofUnmarshaler, _SetConfigRequest_Entry_OneofSizer, []interface{}{
		(*SetConfigRequest_Entry_ValueStr)(nil),
		(*SetConfigRequest_Entry_ValueInt32)(nil),
		(*SetConfigRequest_Entry_ValueBool)(nil),
	}
}

func _SetConfigRequest_Entry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SetConfigRequest_Entry)
	// value
	switch x := m.Value.(type) {
	case *SetConfigRequest_Entry_ValueStr:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ValueStr)
	case *SetConfigRequest_Entry_ValueInt32:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ValueInt32))
	case *SetConfigRequest_Entry_ValueBool:
		t := uint64(0)
		if x.ValueBool {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("SetConfigRequest_Entry.Value has unexpected type %T", x)
	}
	return nil
}

func _SetConfigRequest_Entry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SetConfigRequest_Entry)
	switch tag {
	case 2: // value.value_str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &SetConfigRequest_Entry_ValueStr{x}
		return true, err
	case 3: // value.value_int32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &SetConfigRequest_Entry_ValueInt32{int32(x)}
		return true, err
	case 4: // value.value_bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &SetConfigRequest_Entry_ValueBool{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _SetConfigRequest_Entry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SetConfigRequest_Entry)
	// value
	switch x := m.Value.(type) {
	case *SetConfigRequest_Entry_ValueStr:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ValueStr)))
		n += len(x.ValueStr)
	case *SetConfigRequest_Entry_ValueInt32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ValueInt32))
	case *SetConfigRequest_Entry_ValueBool:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SetConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigResponse) Reset()         { *m = SetConfigResponse{} }
func (m *SetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigResponse) ProtoMessage()    {}
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{43}
}
func (m *SetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigResponse.Unmarshal(m, b)
}
func (m *SetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigResponse.Marshal(b, m, deterministic)
}
func (dst *SetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigResponse.Merge(dst, src)
}
func (m *SetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigResponse.Size(m)
}
func (m *SetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigResponse proto.InternalMessageInfo

type DeleteConfigRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Keys                 []string    `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeleteConfigRequest) Reset()         { *m = DeleteConfigRequest{} }
func (m *DeleteConfigRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteConfigRequest) ProtoMessage()    {}
func (*DeleteConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{44}
}
func (m *DeleteConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConfigRequest.Unmarshal(m, b)
}
func (m *DeleteConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConfigRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConfigRequest.Merge(dst, src)
}
func (m *DeleteConfigRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteConfigRequest.Size(m)
}
func (m *DeleteConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConfigRequest proto.InternalMessageInfo

func (m *DeleteConfigRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *DeleteConfigRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type DeleteConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConfigResponse) Reset()         { *m = DeleteConfigResponse{} }
func (m *DeleteConfigResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteConfigResponse) ProtoMessage()    {}
func (*DeleteConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{45}
}
func (m *DeleteConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConfigResponse.Unmarshal(m, b)
}
func (m *DeleteConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConfigResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConfigResponse.Merge(dst, src)
}
func (m *DeleteConfigResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteConfigResponse.Size(m)
}
func (m *DeleteConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConfigResponse proto.InternalMessageInfo

type RestoreCustomHooksRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Data                 []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RestoreCustomHooksRequest) Reset()         { *m = RestoreCustomHooksRequest{} }
func (m *RestoreCustomHooksRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreCustomHooksRequest) ProtoMessage()    {}
func (*RestoreCustomHooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{46}
}
func (m *RestoreCustomHooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreCustomHooksRequest.Unmarshal(m, b)
}
func (m *RestoreCustomHooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreCustomHooksRequest.Marshal(b, m, deterministic)
}
func (dst *RestoreCustomHooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreCustomHooksRequest.Merge(dst, src)
}
func (m *RestoreCustomHooksRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreCustomHooksRequest.Size(m)
}
func (m *RestoreCustomHooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreCustomHooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreCustomHooksRequest proto.InternalMessageInfo

func (m *RestoreCustomHooksRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *RestoreCustomHooksRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RestoreCustomHooksResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreCustomHooksResponse) Reset()         { *m = RestoreCustomHooksResponse{} }
func (m *RestoreCustomHooksResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreCustomHooksResponse) ProtoMessage()    {}
func (*RestoreCustomHooksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{47}
}
func (m *RestoreCustomHooksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreCustomHooksResponse.Unmarshal(m, b)
}
func (m *RestoreCustomHooksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreCustomHooksResponse.Marshal(b, m, deterministic)
}
func (dst *RestoreCustomHooksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreCustomHooksResponse.Merge(dst, src)
}
func (m *RestoreCustomHooksResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreCustomHooksResponse.Size(m)
}
func (m *RestoreCustomHooksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreCustomHooksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreCustomHooksResponse proto.InternalMessageInfo

type BackupCustomHooksRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BackupCustomHooksRequest) Reset()         { *m = BackupCustomHooksRequest{} }
func (m *BackupCustomHooksRequest) String() string { return proto.CompactTextString(m) }
func (*BackupCustomHooksRequest) ProtoMessage()    {}
func (*BackupCustomHooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{48}
}
func (m *BackupCustomHooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupCustomHooksRequest.Unmarshal(m, b)
}
func (m *BackupCustomHooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupCustomHooksRequest.Marshal(b, m, deterministic)
}
func (dst *BackupCustomHooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupCustomHooksRequest.Merge(dst, src)
}
func (m *BackupCustomHooksRequest) XXX_Size() int {
	return xxx_messageInfo_BackupCustomHooksRequest.Size(m)
}
func (m *BackupCustomHooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupCustomHooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupCustomHooksRequest proto.InternalMessageInfo

func (m *BackupCustomHooksRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type BackupCustomHooksResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupCustomHooksResponse) Reset()         { *m = BackupCustomHooksResponse{} }
func (m *BackupCustomHooksResponse) String() string { return proto.CompactTextString(m) }
func (*BackupCustomHooksResponse) ProtoMessage()    {}
func (*BackupCustomHooksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{49}
}
func (m *BackupCustomHooksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupCustomHooksResponse.Unmarshal(m, b)
}
func (m *BackupCustomHooksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupCustomHooksResponse.Marshal(b, m, deterministic)
}
func (dst *BackupCustomHooksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupCustomHooksResponse.Merge(dst, src)
}
func (m *BackupCustomHooksResponse) XXX_Size() int {
	return xxx_messageInfo_BackupCustomHooksResponse.Size(m)
}
func (m *BackupCustomHooksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupCustomHooksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupCustomHooksResponse proto.InternalMessageInfo

func (m *BackupCustomHooksResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateRepositoryFromBundleRequest struct {
	// Only available on the first message
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Data                 []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryFromBundleRequest) Reset()         { *m = CreateRepositoryFromBundleRequest{} }
func (m *CreateRepositoryFromBundleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromBundleRequest) ProtoMessage()    {}
func (*CreateRepositoryFromBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{50}
}
func (m *CreateRepositoryFromBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromBundleRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryFromBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromBundleRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromBundleRequest.Merge(dst, src)
}
func (m *CreateRepositoryFromBundleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromBundleRequest.Size(m)
}
func (m *CreateRepositoryFromBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromBundleRequest proto.InternalMessageInfo

func (m *CreateRepositoryFromBundleRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *CreateRepositoryFromBundleRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateRepositoryFromBundleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryFromBundleResponse) Reset()         { *m = CreateRepositoryFromBundleResponse{} }
func (m *CreateRepositoryFromBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromBundleResponse) ProtoMessage()    {}
func (*CreateRepositoryFromBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{51}
}
func (m *CreateRepositoryFromBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromBundleResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryFromBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromBundleResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromBundleResponse.Merge(dst, src)
}
func (m *CreateRepositoryFromBundleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromBundleResponse.Size(m)
}
func (m *CreateRepositoryFromBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromBundleResponse proto.InternalMessageInfo

type FindLicenseRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FindLicenseRequest) Reset()         { *m = FindLicenseRequest{} }
func (m *FindLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*FindLicenseRequest) ProtoMessage()    {}
func (*FindLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{52}
}
func (m *FindLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLicenseRequest.Unmarshal(m, b)
}
func (m *FindLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLicenseRequest.Marshal(b, m, deterministic)
}
func (dst *FindLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLicenseRequest.Merge(dst, src)
}
func (m *FindLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_FindLicenseRequest.Size(m)
}
func (m *FindLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindLicenseRequest proto.InternalMessageInfo

func (m *FindLicenseRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type FindLicenseResponse struct {
	LicenseShortName     string   `protobuf:"bytes,1,opt,name=license_short_name,json=licenseShortName,proto3" json:"license_short_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLicenseResponse) Reset()         { *m = FindLicenseResponse{} }
func (m *FindLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*FindLicenseResponse) ProtoMessage()    {}
func (*FindLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{53}
}
func (m *FindLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLicenseResponse.Unmarshal(m, b)
}
func (m *FindLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLicenseResponse.Marshal(b, m, deterministic)
}
func (dst *FindLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLicenseResponse.Merge(dst, src)
}
func (m *FindLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_FindLicenseResponse.Size(m)
}
func (m *FindLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindLicenseResponse proto.InternalMessageInfo

func (m *FindLicenseResponse) GetLicenseShortName() string {
	if m != nil {
		return m.LicenseShortName
	}
	return ""
}

type GetInfoAttributesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetInfoAttributesRequest) Reset()         { *m = GetInfoAttributesRequest{} }
func (m *GetInfoAttributesRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoAttributesRequest) ProtoMessage()    {}
func (*GetInfoAttributesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{54}
}
func (m *GetInfoAttributesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoAttributesRequest.Unmarshal(m, b)
}
func (m *GetInfoAttributesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoAttributesRequest.Marshal(b, m, deterministic)
}
func (dst *GetInfoAttributesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoAttributesRequest.Merge(dst, src)
}
func (m *GetInfoAttributesRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoAttributesRequest.Size(m)
}
func (m *GetInfoAttributesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoAttributesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoAttributesRequest proto.InternalMessageInfo

func (m *GetInfoAttributesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetInfoAttributesResponse struct {
	Attributes           []byte   `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoAttributesResponse) Reset()         { *m = GetInfoAttributesResponse{} }
func (m *GetInfoAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoAttributesResponse) ProtoMessage()    {}
func (*GetInfoAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{55}
}
func (m *GetInfoAttributesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoAttributesResponse.Unmarshal(m, b)
}
func (m *GetInfoAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoAttributesResponse.Marshal(b, m, deterministic)
}
func (dst *GetInfoAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoAttributesResponse.Merge(dst, src)
}
func (m *GetInfoAttributesResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoAttributesResponse.Size(m)
}
func (m *GetInfoAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoAttributesResponse proto.InternalMessageInfo

func (m *GetInfoAttributesResponse) GetAttributes() []byte {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type CalculateChecksumRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CalculateChecksumRequest) Reset()         { *m = CalculateChecksumRequest{} }
func (m *CalculateChecksumRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateChecksumRequest) ProtoMessage()    {}
func (*CalculateChecksumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{56}
}
func (m *CalculateChecksumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateChecksumRequest.Unmarshal(m, b)
}
func (m *CalculateChecksumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateChecksumRequest.Marshal(b, m, deterministic)
}
func (dst *CalculateChecksumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateChecksumRequest.Merge(dst, src)
}
func (m *CalculateChecksumRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateChecksumRequest.Size(m)
}
func (m *CalculateChecksumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateChecksumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateChecksumRequest proto.InternalMessageInfo

func (m *CalculateChecksumRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type CalculateChecksumResponse struct {
	Checksum             string   `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateChecksumResponse) Reset()         { *m = CalculateChecksumResponse{} }
func (m *CalculateChecksumResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateChecksumResponse) ProtoMessage()    {}
func (*CalculateChecksumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{57}
}
func (m *CalculateChecksumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateChecksumResponse.Unmarshal(m, b)
}
func (m *CalculateChecksumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateChecksumResponse.Marshal(b, m, deterministic)
}
func (dst *CalculateChecksumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateChecksumResponse.Merge(dst, src)
}
func (m *CalculateChecksumResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateChecksumResponse.Size(m)
}
func (m *CalculateChecksumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateChecksumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateChecksumResponse proto.InternalMessageInfo

func (m *CalculateChecksumResponse) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type GetSnapshotRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetSnapshotRequest) Reset()         { *m = GetSnapshotRequest{} }
func (m *GetSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*GetSnapshotRequest) ProtoMessage()    {}
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{58}
}
func (m *GetSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSnapshotRequest.Unmarshal(m, b)
}
func (m *GetSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *GetSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSnapshotRequest.Merge(dst, src)
}
func (m *GetSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_GetSnapshotRequest.Size(m)
}
func (m *GetSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSnapshotRequest proto.InternalMessageInfo

func (m *GetSnapshotRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetSnapshotResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSnapshotResponse) Reset()         { *m = GetSnapshotResponse{} }
func (m *GetSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*GetSnapshotResponse) ProtoMessage()    {}
func (*GetSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{59}
}
func (m *GetSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSnapshotResponse.Unmarshal(m, b)
}
func (m *GetSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *GetSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSnapshotResponse.Merge(dst, src)
}
func (m *GetSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_GetSnapshotResponse.Size(m)
}
func (m *GetSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSnapshotResponse proto.InternalMessageInfo

func (m *GetSnapshotResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateRepositoryFromSnapshotRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	HttpUrl              string      `protobuf:"bytes,2,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`
	HttpAuth             string      `protobuf:"bytes,3,opt,name=http_auth,json=httpAuth,proto3" json:"http_auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRepositoryFromSnapshotRequest) Reset()         { *m = CreateRepositoryFromSnapshotRequest{} }
func (m *CreateRepositoryFromSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromSnapshotRequest) ProtoMessage()    {}
func (*CreateRepositoryFromSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{60}
}
func (m *CreateRepositoryFromSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromSnapshotRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryFromSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromSnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromSnapshotRequest.Merge(dst, src)
}
func (m *CreateRepositoryFromSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromSnapshotRequest.Size(m)
}
func (m *CreateRepositoryFromSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromSnapshotRequest proto.InternalMessageInfo

func (m *CreateRepositoryFromSnapshotRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *CreateRepositoryFromSnapshotRequest) GetHttpUrl() string {
	if m != nil {
		return m.HttpUrl
	}
	return ""
}

func (m *CreateRepositoryFromSnapshotRequest) GetHttpAuth() string {
	if m != nil {
		return m.HttpAuth
	}
	return ""
}

type CreateRepositoryFromSnapshotResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryFromSnapshotResponse) Reset()         { *m = CreateRepositoryFromSnapshotResponse{} }
func (m *CreateRepositoryFromSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryFromSnapshotResponse) ProtoMessage()    {}
func (*CreateRepositoryFromSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{61}
}
func (m *CreateRepositoryFromSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryFromSnapshotResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryFromSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryFromSnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRepositoryFromSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryFromSnapshotResponse.Merge(dst, src)
}
func (m *CreateRepositoryFromSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryFromSnapshotResponse.Size(m)
}
func (m *CreateRepositoryFromSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryFromSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryFromSnapshotResponse proto.InternalMessageInfo

type GetRawChangesRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	FromRevision         string      `protobuf:"bytes,2,opt,name=from_revision,json=fromRevision,proto3" json:"from_revision,omitempty"`
	ToRevision           string      `protobuf:"bytes,3,opt,name=to_revision,json=toRevision,proto3" json:"to_revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRawChangesRequest) Reset()         { *m = GetRawChangesRequest{} }
func (m *GetRawChangesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawChangesRequest) ProtoMessage()    {}
func (*GetRawChangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{62}
}
func (m *GetRawChangesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawChangesRequest.Unmarshal(m, b)
}
func (m *GetRawChangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawChangesRequest.Marshal(b, m, deterministic)
}
func (dst *GetRawChangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawChangesRequest.Merge(dst, src)
}
func (m *GetRawChangesRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawChangesRequest.Size(m)
}
func (m *GetRawChangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawChangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawChangesRequest proto.InternalMessageInfo

func (m *GetRawChangesRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *GetRawChangesRequest) GetFromRevision() string {
	if m != nil {
		return m.FromRevision
	}
	return ""
}

func (m *GetRawChangesRequest) GetToRevision() string {
	if m != nil {
		return m.ToRevision
	}
	return ""
}

type GetRawChangesResponse struct {
	RawChanges           []*GetRawChangesResponse_RawChange `protobuf:"bytes,1,rep,name=raw_changes,json=rawChanges,proto3" json:"raw_changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetRawChangesResponse) Reset()         { *m = GetRawChangesResponse{} }
func (m *GetRawChangesResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawChangesResponse) ProtoMessage()    {}
func (*GetRawChangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{63}
}
func (m *GetRawChangesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawChangesResponse.Unmarshal(m, b)
}
func (m *GetRawChangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawChangesResponse.Marshal(b, m, deterministic)
}
func (dst *GetRawChangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawChangesResponse.Merge(dst, src)
}
func (m *GetRawChangesResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawChangesResponse.Size(m)
}
func (m *GetRawChangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawChangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawChangesResponse proto.InternalMessageInfo

func (m *GetRawChangesResponse) GetRawChanges() []*GetRawChangesResponse_RawChange {
	if m != nil {
		return m.RawChanges
	}
	return nil
}

type GetRawChangesResponse_RawChange struct {
	BlobId string `protobuf:"bytes,1,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
	Size   int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// use fields 9 and 10 in place of 3 and 4 (respectively)
	NewPath      string                                    `protobuf:"bytes,3,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"` // Deprecated: Do not use.
	OldPath      string                                    `protobuf:"bytes,4,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"` // Deprecated: Do not use.
	Operation    GetRawChangesResponse_RawChange_Operation `protobuf:"varint,5,opt,name=operation,proto3,enum=gitaly.GetRawChangesResponse_RawChange_Operation" json:"operation,omitempty"`
	RawOperation string                                    `protobuf:"bytes,6,opt,name=raw_operation,json=rawOperation,proto3" json:"raw_operation,omitempty"`
	OldMode      int32                                     `protobuf:"varint,7,opt,name=old_mode,json=oldMode,proto3" json:"old_mode,omitempty"`
	NewMode      int32                                     `protobuf:"varint,8,opt,name=new_mode,json=newMode,proto3" json:"new_mode,omitempty"`
	// the following fields, 9 and 10, will eventually replace 3 and 4
	NewPathBytes         []byte   `protobuf:"bytes,9,opt,name=new_path_bytes,json=newPathBytes,proto3" json:"new_path_bytes,omitempty"`
	OldPathBytes         []byte   `protobuf:"bytes,10,opt,name=old_path_bytes,json=oldPathBytes,proto3" json:"old_path_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawChangesResponse_RawChange) Reset()         { *m = GetRawChangesResponse_RawChange{} }
func (m *GetRawChangesResponse_RawChange) String() string { return proto.CompactTextString(m) }
func (*GetRawChangesResponse_RawChange) ProtoMessage()    {}
func (*GetRawChangesResponse_RawChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{63, 0}
}
func (m *GetRawChangesResponse_RawChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawChangesResponse_RawChange.Unmarshal(m, b)
}
func (m *GetRawChangesResponse_RawChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawChangesResponse_RawChange.Marshal(b, m, deterministic)
}
func (dst *GetRawChangesResponse_RawChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawChangesResponse_RawChange.Merge(dst, src)
}
func (m *GetRawChangesResponse_RawChange) XXX_Size() int {
	return xxx_messageInfo_GetRawChangesResponse_RawChange.Size(m)
}
func (m *GetRawChangesResponse_RawChange) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawChangesResponse_RawChange.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawChangesResponse_RawChange proto.InternalMessageInfo

func (m *GetRawChangesResponse_RawChange) GetBlobId() string {
	if m != nil {
		return m.BlobId
	}
	return ""
}

func (m *GetRawChangesResponse_RawChange) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// Deprecated: Do not use.
func (m *GetRawChangesResponse_RawChange) GetNewPath() string {
	if m != nil {
		return m.NewPath
	}
	return ""
}

// Deprecated: Do not use.
func (m *GetRawChangesResponse_RawChange) GetOldPath() string {
	if m != nil {
		return m.OldPath
	}
	return ""
}

func (m *GetRawChangesResponse_RawChange) GetOperation() GetRawChangesResponse_RawChange_Operation {
	if m != nil {
		return m.Operation
	}
	return GetRawChangesResponse_RawChange_UNKNOWN
}

func (m *GetRawChangesResponse_RawChange) GetRawOperation() string {
	if m != nil {
		return m.RawOperation
	}
	return ""
}

func (m *GetRawChangesResponse_RawChange) GetOldMode() int32 {
	if m != nil {
		return m.OldMode
	}
	return 0
}

func (m *GetRawChangesResponse_RawChange) GetNewMode() int32 {
	if m != nil {
		return m.NewMode
	}
	return 0
}

func (m *GetRawChangesResponse_RawChange) GetNewPathBytes() []byte {
	if m != nil {
		return m.NewPathBytes
	}
	return nil
}

func (m *GetRawChangesResponse_RawChange) GetOldPathBytes() []byte {
	if m != nil {
		return m.OldPathBytes
	}
	return nil
}

type SearchFilesByNameRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Query                string      `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Ref                  []byte      `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchFilesByNameRequest) Reset()         { *m = SearchFilesByNameRequest{} }
func (m *SearchFilesByNameRequest) String() string { return proto.CompactTextString(m) }
func (*SearchFilesByNameRequest) ProtoMessage()    {}
func (*SearchFilesByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{64}
}
func (m *SearchFilesByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFilesByNameRequest.Unmarshal(m, b)
}
func (m *SearchFilesByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFilesByNameRequest.Marshal(b, m, deterministic)
}
func (dst *SearchFilesByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFilesByNameRequest.Merge(dst, src)
}
func (m *SearchFilesByNameRequest) XXX_Size() int {
	return xxx_messageInfo_SearchFilesByNameRequest.Size(m)
}
func (m *SearchFilesByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFilesByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFilesByNameRequest proto.InternalMessageInfo

func (m *SearchFilesByNameRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *SearchFilesByNameRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchFilesByNameRequest) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

type SearchFilesByNameResponse struct {
	Files                [][]byte `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFilesByNameResponse) Reset()         { *m = SearchFilesByNameResponse{} }
func (m *SearchFilesByNameResponse) String() string { return proto.CompactTextString(m) }
func (*SearchFilesByNameResponse) ProtoMessage()    {}
func (*SearchFilesByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{65}
}
func (m *SearchFilesByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFilesByNameResponse.Unmarshal(m, b)
}
func (m *SearchFilesByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFilesByNameResponse.Marshal(b, m, deterministic)
}
func (dst *SearchFilesByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFilesByNameResponse.Merge(dst, src)
}
func (m *SearchFilesByNameResponse) XXX_Size() int {
	return xxx_messageInfo_SearchFilesByNameResponse.Size(m)
}
func (m *SearchFilesByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFilesByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFilesByNameResponse proto.InternalMessageInfo

func (m *SearchFilesByNameResponse) GetFiles() [][]byte {
	if m != nil {
		return m.Files
	}
	return nil
}

type SearchFilesByContentRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Query                string      `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Ref                  []byte      `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
	ChunkedResponse      bool        `protobuf:"varint,4,opt,name=chunked_response,json=chunkedResponse,proto3" json:"chunked_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchFilesByContentRequest) Reset()         { *m = SearchFilesByContentRequest{} }
func (m *SearchFilesByContentRequest) String() string { return proto.CompactTextString(m) }
func (*SearchFilesByContentRequest) ProtoMessage()    {}
func (*SearchFilesByContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{66}
}
func (m *SearchFilesByContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFilesByContentRequest.Unmarshal(m, b)
}
func (m *SearchFilesByContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFilesByContentRequest.Marshal(b, m, deterministic)
}
func (dst *SearchFilesByContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFilesByContentRequest.Merge(dst, src)
}
func (m *SearchFilesByContentRequest) XXX_Size() int {
	return xxx_messageInfo_SearchFilesByContentRequest.Size(m)
}
func (m *SearchFilesByContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFilesByContentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFilesByContentRequest proto.InternalMessageInfo

func (m *SearchFilesByContentRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *SearchFilesByContentRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchFilesByContentRequest) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *SearchFilesByContentRequest) GetChunkedResponse() bool {
	if m != nil {
		return m.ChunkedResponse
	}
	return false
}

type SearchFilesByContentResponse struct {
	Matches              [][]byte `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	MatchData            []byte   `protobuf:"bytes,2,opt,name=match_data,json=matchData,proto3" json:"match_data,omitempty"`
	EndOfMatch           bool     `protobuf:"varint,3,opt,name=end_of_match,json=endOfMatch,proto3" json:"end_of_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFilesByContentResponse) Reset()         { *m = SearchFilesByContentResponse{} }
func (m *SearchFilesByContentResponse) String() string { return proto.CompactTextString(m) }
func (*SearchFilesByContentResponse) ProtoMessage()    {}
func (*SearchFilesByContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{67}
}
func (m *SearchFilesByContentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFilesByContentResponse.Unmarshal(m, b)
}
func (m *SearchFilesByContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFilesByContentResponse.Marshal(b, m, deterministic)
}
func (dst *SearchFilesByContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFilesByContentResponse.Merge(dst, src)
}
func (m *SearchFilesByContentResponse) XXX_Size() int {
	return xxx_messageInfo_SearchFilesByContentResponse.Size(m)
}
func (m *SearchFilesByContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFilesByContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFilesByContentResponse proto.InternalMessageInfo

func (m *SearchFilesByContentResponse) GetMatches() [][]byte {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *SearchFilesByContentResponse) GetMatchData() []byte {
	if m != nil {
		return m.MatchData
	}
	return nil
}

func (m *SearchFilesByContentResponse) GetEndOfMatch() bool {
	if m != nil {
		return m.EndOfMatch
	}
	return false
}

type PreFetchRequest struct {
	SourceRepository     *Repository `protobuf:"bytes,1,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	TargetRepository     *Repository `protobuf:"bytes,2,opt,name=target_repository,json=targetRepository,proto3" json:"target_repository,omitempty"`
	ObjectPool           *ObjectPool `protobuf:"bytes,3,opt,name=object_pool,json=objectPool,proto3" json:"object_pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PreFetchRequest) Reset()         { *m = PreFetchRequest{} }
func (m *PreFetchRequest) String() string { return proto.CompactTextString(m) }
func (*PreFetchRequest) ProtoMessage()    {}
func (*PreFetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{68}
}
func (m *PreFetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreFetchRequest.Unmarshal(m, b)
}
func (m *PreFetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreFetchRequest.Marshal(b, m, deterministic)
}
func (dst *PreFetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreFetchRequest.Merge(dst, src)
}
func (m *PreFetchRequest) XXX_Size() int {
	return xxx_messageInfo_PreFetchRequest.Size(m)
}
func (m *PreFetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreFetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreFetchRequest proto.InternalMessageInfo

func (m *PreFetchRequest) GetSourceRepository() *Repository {
	if m != nil {
		return m.SourceRepository
	}
	return nil
}

func (m *PreFetchRequest) GetTargetRepository() *Repository {
	if m != nil {
		return m.TargetRepository
	}
	return nil
}

func (m *PreFetchRequest) GetObjectPool() *ObjectPool {
	if m != nil {
		return m.ObjectPool
	}
	return nil
}

type PreFetchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreFetchResponse) Reset()         { *m = PreFetchResponse{} }
func (m *PreFetchResponse) String() string { return proto.CompactTextString(m) }
func (*PreFetchResponse) ProtoMessage()    {}
func (*PreFetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{69}
}
func (m *PreFetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreFetchResponse.Unmarshal(m, b)
}
func (m *PreFetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreFetchResponse.Marshal(b, m, deterministic)
}
func (dst *PreFetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreFetchResponse.Merge(dst, src)
}
func (m *PreFetchResponse) XXX_Size() int {
	return xxx_messageInfo_PreFetchResponse.Size(m)
}
func (m *PreFetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PreFetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PreFetchResponse proto.InternalMessageInfo

type Remote struct {
	Url                     string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name                    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HttpAuthorizationHeader string   `protobuf:"bytes,3,opt,name=http_authorization_header,json=httpAuthorizationHeader,proto3" json:"http_authorization_header,omitempty"`
	MirrorRefmaps           []string `protobuf:"bytes,4,rep,name=mirror_refmaps,json=mirrorRefmaps,proto3" json:"mirror_refmaps,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Remote) Reset()         { *m = Remote{} }
func (m *Remote) String() string { return proto.CompactTextString(m) }
func (*Remote) ProtoMessage()    {}
func (*Remote) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{70}
}
func (m *Remote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Remote.Unmarshal(m, b)
}
func (m *Remote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Remote.Marshal(b, m, deterministic)
}
func (dst *Remote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Remote.Merge(dst, src)
}
func (m *Remote) XXX_Size() int {
	return xxx_messageInfo_Remote.Size(m)
}
func (m *Remote) XXX_DiscardUnknown() {
	xxx_messageInfo_Remote.DiscardUnknown(m)
}

var xxx_messageInfo_Remote proto.InternalMessageInfo

func (m *Remote) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Remote) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Remote) GetHttpAuthorizationHeader() string {
	if m != nil {
		return m.HttpAuthorizationHeader
	}
	return ""
}

func (m *Remote) GetMirrorRefmaps() []string {
	if m != nil {
		return m.MirrorRefmaps
	}
	return nil
}

type FetchHTTPRemoteRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Remote               *Remote     `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Timeout              int32       `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchHTTPRemoteRequest) Reset()         { *m = FetchHTTPRemoteRequest{} }
func (m *FetchHTTPRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*FetchHTTPRemoteRequest) ProtoMessage()    {}
func (*FetchHTTPRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{71}
}
func (m *FetchHTTPRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchHTTPRemoteRequest.Unmarshal(m, b)
}
func (m *FetchHTTPRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchHTTPRemoteRequest.Marshal(b, m, deterministic)
}
func (dst *FetchHTTPRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchHTTPRemoteRequest.Merge(dst, src)
}
func (m *FetchHTTPRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_FetchHTTPRemoteRequest.Size(m)
}
func (m *FetchHTTPRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchHTTPRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchHTTPRemoteRequest proto.InternalMessageInfo

func (m *FetchHTTPRemoteRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *FetchHTTPRemoteRequest) GetRemote() *Remote {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *FetchHTTPRemoteRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type FetchHTTPRemoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchHTTPRemoteResponse) Reset()         { *m = FetchHTTPRemoteResponse{} }
func (m *FetchHTTPRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*FetchHTTPRemoteResponse) ProtoMessage()    {}
func (*FetchHTTPRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{72}
}
func (m *FetchHTTPRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchHTTPRemoteResponse.Unmarshal(m, b)
}
func (m *FetchHTTPRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchHTTPRemoteResponse.Marshal(b, m, deterministic)
}
func (dst *FetchHTTPRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchHTTPRemoteResponse.Merge(dst, src)
}
func (m *FetchHTTPRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_FetchHTTPRemoteResponse.Size(m)
}
func (m *FetchHTTPRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchHTTPRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchHTTPRemoteResponse proto.InternalMessageInfo

type GetObjectDirectorySizeRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetObjectDirectorySizeRequest) Reset()         { *m = GetObjectDirectorySizeRequest{} }
func (m *GetObjectDirectorySizeRequest) String() string { return proto.CompactTextString(m) }
func (*GetObjectDirectorySizeRequest) ProtoMessage()    {}
func (*GetObjectDirectorySizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{73}
}
func (m *GetObjectDirectorySizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectDirectorySizeRequest.Unmarshal(m, b)
}
func (m *GetObjectDirectorySizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectDirectorySizeRequest.Marshal(b, m, deterministic)
}
func (dst *GetObjectDirectorySizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectDirectorySizeRequest.Merge(dst, src)
}
func (m *GetObjectDirectorySizeRequest) XXX_Size() int {
	return xxx_messageInfo_GetObjectDirectorySizeRequest.Size(m)
}
func (m *GetObjectDirectorySizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectDirectorySizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectDirectorySizeRequest proto.InternalMessageInfo

func (m *GetObjectDirectorySizeRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetObjectDirectorySizeResponse struct {
	// Object directory size in kilobytes
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectDirectorySizeResponse) Reset()         { *m = GetObjectDirectorySizeResponse{} }
func (m *GetObjectDirectorySizeResponse) String() string { return proto.CompactTextString(m) }
func (*GetObjectDirectorySizeResponse) ProtoMessage()    {}
func (*GetObjectDirectorySizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repository_service_dd8087831f1c5f01, []int{74}
}
func (m *GetObjectDirectorySizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectDirectorySizeResponse.Unmarshal(m, b)
}
func (m *GetObjectDirectorySizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectDirectorySizeResponse.Marshal(b, m, deterministic)
}
func (dst *GetObjectDirectorySizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectDirectorySizeResponse.Merge(dst, src)
}
func (m *GetObjectDirectorySizeResponse) XXX_Size() int {
	return xxx_messageInfo_GetObjectDirectorySizeResponse.Size(m)
}
func (m *GetObjectDirectorySizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectDirectorySizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectDirectorySizeResponse proto.InternalMessageInfo

func (m *GetObjectDirectorySizeResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*RepositoryExistsRequest)(nil), "gitaly.RepositoryExistsRequest")
	proto.RegisterType((*RepositoryExistsResponse)(nil), "gitaly.RepositoryExistsResponse")
	proto.RegisterType((*RepackIncrementalRequest)(nil), "gitaly.RepackIncrementalRequest")
	proto.RegisterType((*RepackIncrementalResponse)(nil), "gitaly.RepackIncrementalResponse")
	proto.RegisterType((*RepackFullRequest)(nil), "gitaly.RepackFullRequest")
	proto.RegisterType((*RepackFullResponse)(nil), "gitaly.RepackFullResponse")
	proto.RegisterType((*GarbageCollectRequest)(nil), "gitaly.GarbageCollectRequest")
	proto.RegisterType((*GarbageCollectResponse)(nil), "gitaly.GarbageCollectResponse")
	proto.RegisterType((*CleanupRequest)(nil), "gitaly.CleanupRequest")
	proto.RegisterType((*CleanupResponse)(nil), "gitaly.CleanupResponse")
	proto.RegisterType((*RepositorySizeRequest)(nil), "gitaly.RepositorySizeRequest")
	proto.RegisterType((*RepositorySizeResponse)(nil), "gitaly.RepositorySizeResponse")
	proto.RegisterType((*ApplyGitattributesRequest)(nil), "gitaly.ApplyGitattributesRequest")
	proto.RegisterType((*ApplyGitattributesResponse)(nil), "gitaly.ApplyGitattributesResponse")
	proto.RegisterType((*FetchRemoteRequest)(nil), "gitaly.FetchRemoteRequest")
	proto.RegisterType((*FetchRemoteResponse)(nil), "gitaly.FetchRemoteResponse")
	proto.RegisterType((*CreateRepositoryRequest)(nil), "gitaly.CreateRepositoryRequest")
	proto.RegisterType((*CreateRepositoryResponse)(nil), "gitaly.CreateRepositoryResponse")
	proto.RegisterType((*GetArchiveRequest)(nil), "gitaly.GetArchiveRequest")
	proto.RegisterType((*GetArchiveResponse)(nil), "gitaly.GetArchiveResponse")
	proto.RegisterType((*HasLocalBranchesRequest)(nil), "gitaly.HasLocalBranchesRequest")
	proto.RegisterType((*HasLocalBranchesResponse)(nil), "gitaly.HasLocalBranchesResponse")
	proto.RegisterType((*FetchSourceBranchRequest)(nil), "gitaly.FetchSourceBranchRequest")
	proto.RegisterType((*FetchSourceBranchResponse)(nil), "gitaly.FetchSourceBranchResponse")
	proto.RegisterType((*FsckRequest)(nil), "gitaly.FsckRequest")
	proto.RegisterType((*FsckResponse)(nil), "gitaly.FsckResponse")
	proto.RegisterType((*WriteRefRequest)(nil), "gitaly.WriteRefRequest")
	proto.RegisterType((*WriteRefResponse)(nil), "gitaly.WriteRefResponse")
	proto.RegisterType((*FindMergeBaseRequest)(nil), "gitaly.FindMergeBaseRequest")
	proto.RegisterType((*FindMergeBaseResponse)(nil), "gitaly.FindMergeBaseResponse")
	proto.RegisterType((*CreateForkRequest)(nil), "gitaly.CreateForkRequest")
	proto.RegisterType((*CreateForkResponse)(nil), "gitaly.CreateForkResponse")
	proto.RegisterType((*IsRebaseInProgressRequest)(nil), "gitaly.IsRebaseInProgressRequest")
	proto.RegisterType((*IsRebaseInProgressResponse)(nil), "gitaly.IsRebaseInProgressResponse")
	proto.RegisterType((*IsSquashInProgressRequest)(nil), "gitaly.IsSquashInProgressRequest")
	proto.RegisterType((*IsSquashInProgressResponse)(nil), "gitaly.IsSquashInProgressResponse")
	proto.RegisterType((*CreateRepositoryFromURLRequest)(nil), "gitaly.CreateRepositoryFromURLRequest")
	proto.RegisterType((*CreateRepositoryFromURLResponse)(nil), "gitaly.CreateRepositoryFromURLResponse")
	proto.RegisterType((*CreateBundleRequest)(nil), "gitaly.CreateBundleRequest")
	proto.RegisterType((*CreateBundleResponse)(nil), "gitaly.CreateBundleResponse")
	proto.RegisterType((*WriteConfigRequest)(nil), "gitaly.WriteConfigRequest")
	proto.RegisterType((*WriteConfigResponse)(nil), "gitaly.WriteConfigResponse")
	proto.RegisterType((*SetConfigRequest)(nil), "gitaly.SetConfigRequest")
	proto.RegisterType((*SetConfigRequest_Entry)(nil), "gitaly.SetConfigRequest.Entry")
	proto.RegisterType((*SetConfigResponse)(nil), "gitaly.SetConfigResponse")
	proto.RegisterType((*DeleteConfigRequest)(nil), "gitaly.DeleteConfigRequest")
	proto.RegisterType((*DeleteConfigResponse)(nil), "gitaly.DeleteConfigResponse")
	proto.RegisterType((*RestoreCustomHooksRequest)(nil), "gitaly.RestoreCustomHooksRequest")
	proto.RegisterType((*RestoreCustomHooksResponse)(nil), "gitaly.RestoreCustomHooksResponse")
	proto.RegisterType((*BackupCustomHooksRequest)(nil), "gitaly.BackupCustomHooksRequest")
	proto.RegisterType((*BackupCustomHooksResponse)(nil), "gitaly.BackupCustomHooksResponse")
	proto.RegisterType((*CreateRepositoryFromBundleRequest)(nil), "gitaly.CreateRepositoryFromBundleRequest")
	proto.RegisterType((*CreateRepositoryFromBundleResponse)(nil), "gitaly.CreateRepositoryFromBundleResponse")
	proto.RegisterType((*FindLicenseRequest)(nil), "gitaly.FindLicenseRequest")
	proto.RegisterType((*FindLicenseResponse)(nil), "gitaly.FindLicenseResponse")
	proto.RegisterType((*GetInfoAttributesRequest)(nil), "gitaly.GetInfoAttributesRequest")
	proto.RegisterType((*GetInfoAttributesResponse)(nil), "gitaly.GetInfoAttributesResponse")
	proto.RegisterType((*CalculateChecksumRequest)(nil), "gitaly.CalculateChecksumRequest")
	proto.RegisterType((*CalculateChecksumResponse)(nil), "gitaly.CalculateChecksumResponse")
	proto.RegisterType((*GetSnapshotRequest)(nil), "gitaly.GetSnapshotRequest")
	proto.RegisterType((*GetSnapshotResponse)(nil), "gitaly.GetSnapshotResponse")
	proto.RegisterType((*CreateRepositoryFromSnapshotRequest)(nil), "gitaly.CreateRepositoryFromSnapshotRequest")
	proto.RegisterType((*CreateRepositoryFromSnapshotResponse)(nil), "gitaly.CreateRepositoryFromSnapshotResponse")
	proto.RegisterType((*GetRawChangesRequest)(nil), "gitaly.GetRawChangesRequest")
	proto.RegisterType((*GetRawChangesResponse)(nil), "gitaly.GetRawChangesResponse")
	proto.RegisterType((*GetRawChangesResponse_RawChange)(nil), "gitaly.GetRawChangesResponse.RawChange")
	proto.RegisterType((*SearchFilesByNameRequest)(nil), "gitaly.SearchFilesByNameRequest")
	proto.RegisterType((*SearchFilesByNameResponse)(nil), "gitaly.SearchFilesByNameResponse")
	proto.RegisterType((*SearchFilesByContentRequest)(nil), "gitaly.SearchFilesByContentRequest")
	proto.RegisterType((*SearchFilesByContentResponse)(nil), "gitaly.SearchFilesByContentResponse")
	proto.RegisterType((*PreFetchRequest)(nil), "gitaly.PreFetchRequest")
	proto.RegisterType((*PreFetchResponse)(nil), "gitaly.PreFetchResponse")
	proto.RegisterType((*Remote)(nil), "gitaly.Remote")
	proto.RegisterType((*FetchHTTPRemoteRequest)(nil), "gitaly.FetchHTTPRemoteRequest")
	proto.RegisterType((*FetchHTTPRemoteResponse)(nil), "gitaly.FetchHTTPRemoteResponse")
	proto.RegisterType((*GetObjectDirectorySizeRequest)(nil), "gitaly.GetObjectDirectorySizeRequest")
	proto.RegisterType((*GetObjectDirectorySizeResponse)(nil), "gitaly.GetObjectDirectorySizeResponse")
	proto.RegisterEnum("gitaly.GetArchiveRequest_Format", GetArchiveRequest_Format_name, GetArchiveRequest_Format_value)
	proto.RegisterEnum("gitaly.GetRawChangesResponse_RawChange_Operation", GetRawChangesResponse_RawChange_Operation_name, GetRawChangesResponse_RawChange_Operation_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepositoryServiceClient is the client API for RepositoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepositoryServiceClient interface {
	RepositoryExists(ctx context.Context, in *RepositoryExistsRequest, opts ...grpc.CallOption) (*RepositoryExistsResponse, error)
	RepackIncremental(ctx context.Context, in *RepackIncrementalRequest, opts ...grpc.CallOption) (*RepackIncrementalResponse, error)
	RepackFull(ctx context.Context, in *RepackFullRequest, opts ...grpc.CallOption) (*RepackFullResponse, error)
	GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectResponse, error)
	RepositorySize(ctx context.Context, in *RepositorySizeRequest, opts ...grpc.CallOption) (*RepositorySizeResponse, error)
	ApplyGitattributes(ctx context.Context, in *ApplyGitattributesRequest, opts ...grpc.CallOption) (*ApplyGitattributesResponse, error)
	FetchRemote(ctx context.Context, in *FetchRemoteRequest, opts ...grpc.CallOption) (*FetchRemoteResponse, error)
	CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error)
	GetArchive(ctx context.Context, in *GetArchiveRequest, opts ...grpc.CallOption) (RepositoryService_GetArchiveClient, error)
	HasLocalBranches(ctx context.Context, in *HasLocalBranchesRequest, opts ...grpc.CallOption) (*HasLocalBranchesResponse, error)
	FetchSourceBranch(ctx context.Context, in *FetchSourceBranchRequest, opts ...grpc.CallOption) (*FetchSourceBranchResponse, error)
	Fsck(ctx context.Context, in *FsckRequest, opts ...grpc.CallOption) (*FsckResponse, error)
	WriteRef(ctx context.Context, in *WriteRefRequest, opts ...grpc.CallOption) (*WriteRefResponse, error)
	FindMergeBase(ctx context.Context, in *FindMergeBaseRequest, opts ...grpc.CallOption) (*FindMergeBaseResponse, error)
	CreateFork(ctx context.Context, in *CreateForkRequest, opts ...grpc.CallOption) (*CreateForkResponse, error)
	IsRebaseInProgress(ctx context.Context, in *IsRebaseInProgressRequest, opts ...grpc.CallOption) (*IsRebaseInProgressResponse, error)
	IsSquashInProgress(ctx context.Context, in *IsSquashInProgressRequest, opts ...grpc.CallOption) (*IsSquashInProgressResponse, error)
	CreateRepositoryFromURL(ctx context.Context, in *CreateRepositoryFromURLRequest, opts ...grpc.CallOption) (*CreateRepositoryFromURLResponse, error)
	CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (RepositoryService_CreateBundleClient, error)
	CreateRepositoryFromBundle(ctx context.Context, opts ...grpc.CallOption) (RepositoryService_CreateRepositoryFromBundleClient, error)
	WriteConfig(ctx context.Context, in *WriteConfigRequest, opts ...grpc.CallOption) (*WriteConfigResponse, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	DeleteConfig(ctx context.Context, in *DeleteConfigRequest, opts ...grpc.CallOption) (*DeleteConfigResponse, error)
	FindLicense(ctx context.Context, in *FindLicenseRequest, opts ...grpc.CallOption) (*FindLicenseResponse, error)
	GetInfoAttributes(ctx context.Context, in *GetInfoAttributesRequest, opts ...grpc.CallOption) (RepositoryService_GetInfoAttributesClient, error)
	CalculateChecksum(ctx context.Context, in *CalculateChecksumRequest, opts ...grpc.CallOption) (*CalculateChecksumResponse, error)
	Cleanup(ctx context.Context, in *CleanupRequest, opts ...grpc.CallOption) (*CleanupResponse, error)
	GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (RepositoryService_GetSnapshotClient, error)
	CreateRepositoryFromSnapshot(ctx context.Context, in *CreateRepositoryFromSnapshotRequest, opts ...grpc.CallOption) (*CreateRepositoryFromSnapshotResponse, error)
	GetRawChanges(ctx context.Context, in *GetRawChangesRequest, opts ...grpc.CallOption) (RepositoryService_GetRawChangesClient, error)
	SearchFilesByContent(ctx context.Context, in *SearchFilesByContentRequest, opts ...grpc.CallOption) (RepositoryService_SearchFilesByContentClient, error)
	SearchFilesByName(ctx context.Context, in *SearchFilesByNameRequest, opts ...grpc.CallOption) (RepositoryService_SearchFilesByNameClient, error)
	RestoreCustomHooks(ctx context.Context, opts ...grpc.CallOption) (RepositoryService_RestoreCustomHooksClient, error)
	BackupCustomHooks(ctx context.Context, in *BackupCustomHooksRequest, opts ...grpc.CallOption) (RepositoryService_BackupCustomHooksClient, error)
	PreFetch(ctx context.Context, in *PreFetchRequest, opts ...grpc.CallOption) (*PreFetchResponse, error)
	FetchHTTPRemote(ctx context.Context, in *FetchHTTPRemoteRequest, opts ...grpc.CallOption) (*FetchHTTPRemoteResponse, error)
	GetObjectDirectorySize(ctx context.Context, in *GetObjectDirectorySizeRequest, opts ...grpc.CallOption) (*GetObjectDirectorySizeResponse, error)
}

type repositoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewRepositoryServiceClient(cc *grpc.ClientConn) RepositoryServiceClient {
	return &repositoryServiceClient{cc}
}

func (c *repositoryServiceClient) RepositoryExists(ctx context.Context, in *RepositoryExistsRequest, opts ...grpc.CallOption) (*RepositoryExistsResponse, error) {
	out := new(RepositoryExistsResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/RepositoryExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepackIncremental(ctx context.Context, in *RepackIncrementalRequest, opts ...grpc.CallOption) (*RepackIncrementalResponse, error) {
	out := new(RepackIncrementalResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/RepackIncremental", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepackFull(ctx context.Context, in *RepackFullRequest, opts ...grpc.CallOption) (*RepackFullResponse, error) {
	out := new(RepackFullResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/RepackFull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GarbageCollect(ctx context.Context, in *GarbageCollectRequest, opts ...grpc.CallOption) (*GarbageCollectResponse, error) {
	out := new(GarbageCollectResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/GarbageCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) RepositorySize(ctx context.Context, in *RepositorySizeRequest, opts ...grpc.CallOption) (*RepositorySizeResponse, error) {
	out := new(RepositorySizeResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/RepositorySize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) ApplyGitattributes(ctx context.Context, in *ApplyGitattributesRequest, opts ...grpc.CallOption) (*ApplyGitattributesResponse, error) {
	out := new(ApplyGitattributesResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/ApplyGitattributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FetchRemote(ctx context.Context, in *FetchRemoteRequest, opts ...grpc.CallOption) (*FetchRemoteResponse, error) {
	out := new(FetchRemoteResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/FetchRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error) {
	out := new(CreateRepositoryResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetArchive(ctx context.Context, in *GetArchiveRequest, opts ...grpc.CallOption) (RepositoryService_GetArchiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[0], "/gitaly.RepositoryService/GetArchive", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceGetArchiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_GetArchiveClient interface {
	Recv() (*GetArchiveResponse, error)
	grpc.ClientStream
}

type repositoryServiceGetArchiveClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceGetArchiveClient) Recv() (*GetArchiveResponse, error) {
	m := new(GetArchiveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) HasLocalBranches(ctx context.Context, in *HasLocalBranchesRequest, opts ...grpc.CallOption) (*HasLocalBranchesResponse, error) {
	out := new(HasLocalBranchesResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/HasLocalBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FetchSourceBranch(ctx context.Context, in *FetchSourceBranchRequest, opts ...grpc.CallOption) (*FetchSourceBranchResponse, error) {
	out := new(FetchSourceBranchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/FetchSourceBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) Fsck(ctx context.Context, in *FsckRequest, opts ...grpc.CallOption) (*FsckResponse, error) {
	out := new(FsckResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/Fsck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) WriteRef(ctx context.Context, in *WriteRefRequest, opts ...grpc.CallOption) (*WriteRefResponse, error) {
	out := new(WriteRefResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/WriteRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FindMergeBase(ctx context.Context, in *FindMergeBaseRequest, opts ...grpc.CallOption) (*FindMergeBaseResponse, error) {
	out := new(FindMergeBaseResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/FindMergeBase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) CreateFork(ctx context.Context, in *CreateForkRequest, opts ...grpc.CallOption) (*CreateForkResponse, error) {
	out := new(CreateForkResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/CreateFork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) IsRebaseInProgress(ctx context.Context, in *IsRebaseInProgressRequest, opts ...grpc.CallOption) (*IsRebaseInProgressResponse, error) {
	out := new(IsRebaseInProgressResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/IsRebaseInProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) IsSquashInProgress(ctx context.Context, in *IsSquashInProgressRequest, opts ...grpc.CallOption) (*IsSquashInProgressResponse, error) {
	out := new(IsSquashInProgressResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/IsSquashInProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) CreateRepositoryFromURL(ctx context.Context, in *CreateRepositoryFromURLRequest, opts ...grpc.CallOption) (*CreateRepositoryFromURLResponse, error) {
	out := new(CreateRepositoryFromURLResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/CreateRepositoryFromURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (RepositoryService_CreateBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[1], "/gitaly.RepositoryService/CreateBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceCreateBundleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_CreateBundleClient interface {
	Recv() (*CreateBundleResponse, error)
	grpc.ClientStream
}

type repositoryServiceCreateBundleClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceCreateBundleClient) Recv() (*CreateBundleResponse, error) {
	m := new(CreateBundleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) CreateRepositoryFromBundle(ctx context.Context, opts ...grpc.CallOption) (RepositoryService_CreateRepositoryFromBundleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[2], "/gitaly.RepositoryService/CreateRepositoryFromBundle", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceCreateRepositoryFromBundleClient{stream}
	return x, nil
}

type RepositoryService_CreateRepositoryFromBundleClient interface {
	Send(*CreateRepositoryFromBundleRequest) error
	CloseAndRecv() (*CreateRepositoryFromBundleResponse, error)
	grpc.ClientStream
}

type repositoryServiceCreateRepositoryFromBundleClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceCreateRepositoryFromBundleClient) Send(m *CreateRepositoryFromBundleRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *repositoryServiceCreateRepositoryFromBundleClient) CloseAndRecv() (*CreateRepositoryFromBundleResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CreateRepositoryFromBundleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) WriteConfig(ctx context.Context, in *WriteConfigRequest, opts ...grpc.CallOption) (*WriteConfigResponse, error) {
	out := new(WriteConfigResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/WriteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) DeleteConfig(ctx context.Context, in *DeleteConfigRequest, opts ...grpc.CallOption) (*DeleteConfigResponse, error) {
	out := new(DeleteConfigResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/DeleteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FindLicense(ctx context.Context, in *FindLicenseRequest, opts ...grpc.CallOption) (*FindLicenseResponse, error) {
	out := new(FindLicenseResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/FindLicense", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetInfoAttributes(ctx context.Context, in *GetInfoAttributesRequest, opts ...grpc.CallOption) (RepositoryService_GetInfoAttributesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[3], "/gitaly.RepositoryService/GetInfoAttributes", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceGetInfoAttributesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_GetInfoAttributesClient interface {
	Recv() (*GetInfoAttributesResponse, error)
	grpc.ClientStream
}

type repositoryServiceGetInfoAttributesClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceGetInfoAttributesClient) Recv() (*GetInfoAttributesResponse, error) {
	m := new(GetInfoAttributesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) CalculateChecksum(ctx context.Context, in *CalculateChecksumRequest, opts ...grpc.CallOption) (*CalculateChecksumResponse, error) {
	out := new(CalculateChecksumResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/CalculateChecksum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) Cleanup(ctx context.Context, in *CleanupRequest, opts ...grpc.CallOption) (*CleanupResponse, error) {
	out := new(CleanupResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/Cleanup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetSnapshot(ctx context.Context, in *GetSnapshotRequest, opts ...grpc.CallOption) (RepositoryService_GetSnapshotClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[4], "/gitaly.RepositoryService/GetSnapshot", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceGetSnapshotClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_GetSnapshotClient interface {
	Recv() (*GetSnapshotResponse, error)
	grpc.ClientStream
}

type repositoryServiceGetSnapshotClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceGetSnapshotClient) Recv() (*GetSnapshotResponse, error) {
	m := new(GetSnapshotResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) CreateRepositoryFromSnapshot(ctx context.Context, in *CreateRepositoryFromSnapshotRequest, opts ...grpc.CallOption) (*CreateRepositoryFromSnapshotResponse, error) {
	out := new(CreateRepositoryFromSnapshotResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/CreateRepositoryFromSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetRawChanges(ctx context.Context, in *GetRawChangesRequest, opts ...grpc.CallOption) (RepositoryService_GetRawChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[5], "/gitaly.RepositoryService/GetRawChanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceGetRawChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_GetRawChangesClient interface {
	Recv() (*GetRawChangesResponse, error)
	grpc.ClientStream
}

type repositoryServiceGetRawChangesClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceGetRawChangesClient) Recv() (*GetRawChangesResponse, error) {
	m := new(GetRawChangesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) SearchFilesByContent(ctx context.Context, in *SearchFilesByContentRequest, opts ...grpc.CallOption) (RepositoryService_SearchFilesByContentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[6], "/gitaly.RepositoryService/SearchFilesByContent", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceSearchFilesByContentClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_SearchFilesByContentClient interface {
	Recv() (*SearchFilesByContentResponse, error)
	grpc.ClientStream
}

type repositoryServiceSearchFilesByContentClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceSearchFilesByContentClient) Recv() (*SearchFilesByContentResponse, error) {
	m := new(SearchFilesByContentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) SearchFilesByName(ctx context.Context, in *SearchFilesByNameRequest, opts ...grpc.CallOption) (RepositoryService_SearchFilesByNameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[7], "/gitaly.RepositoryService/SearchFilesByName", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceSearchFilesByNameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_SearchFilesByNameClient interface {
	Recv() (*SearchFilesByNameResponse, error)
	grpc.ClientStream
}

type repositoryServiceSearchFilesByNameClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceSearchFilesByNameClient) Recv() (*SearchFilesByNameResponse, error) {
	m := new(SearchFilesByNameResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) RestoreCustomHooks(ctx context.Context, opts ...grpc.CallOption) (RepositoryService_RestoreCustomHooksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[8], "/gitaly.RepositoryService/RestoreCustomHooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceRestoreCustomHooksClient{stream}
	return x, nil
}

type RepositoryService_RestoreCustomHooksClient interface {
	Send(*RestoreCustomHooksRequest) error
	CloseAndRecv() (*RestoreCustomHooksResponse, error)
	grpc.ClientStream
}

type repositoryServiceRestoreCustomHooksClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceRestoreCustomHooksClient) Send(m *RestoreCustomHooksRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *repositoryServiceRestoreCustomHooksClient) CloseAndRecv() (*RestoreCustomHooksResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(RestoreCustomHooksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) BackupCustomHooks(ctx context.Context, in *BackupCustomHooksRequest, opts ...grpc.CallOption) (RepositoryService_BackupCustomHooksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RepositoryService_serviceDesc.Streams[9], "/gitaly.RepositoryService/BackupCustomHooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &repositoryServiceBackupCustomHooksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RepositoryService_BackupCustomHooksClient interface {
	Recv() (*BackupCustomHooksResponse, error)
	grpc.ClientStream
}

type repositoryServiceBackupCustomHooksClient struct {
	grpc.ClientStream
}

func (x *repositoryServiceBackupCustomHooksClient) Recv() (*BackupCustomHooksResponse, error) {
	m := new(BackupCustomHooksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *repositoryServiceClient) PreFetch(ctx context.Context, in *PreFetchRequest, opts ...grpc.CallOption) (*PreFetchResponse, error) {
	out := new(PreFetchResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/PreFetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) FetchHTTPRemote(ctx context.Context, in *FetchHTTPRemoteRequest, opts ...grpc.CallOption) (*FetchHTTPRemoteResponse, error) {
	out := new(FetchHTTPRemoteResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/FetchHTTPRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryServiceClient) GetObjectDirectorySize(ctx context.Context, in *GetObjectDirectorySizeRequest, opts ...grpc.CallOption) (*GetObjectDirectorySizeResponse, error) {
	out := new(GetObjectDirectorySizeResponse)
	err := c.cc.Invoke(ctx, "/gitaly.RepositoryService/GetObjectDirectorySize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepositoryServiceServer is the server API for RepositoryService service.
type RepositoryServiceServer interface {
	RepositoryExists(context.Context, *RepositoryExistsRequest) (*RepositoryExistsResponse, error)
	RepackIncremental(context.Context, *RepackIncrementalRequest) (*RepackIncrementalResponse, error)
	RepackFull(context.Context, *RepackFullRequest) (*RepackFullResponse, error)
	GarbageCollect(context.Context, *GarbageCollectRequest) (*GarbageCollectResponse, error)
	RepositorySize(context.Context, *RepositorySizeRequest) (*RepositorySizeResponse, error)
	ApplyGitattributes(context.Context, *ApplyGitattributesRequest) (*ApplyGitattributesResponse, error)
	FetchRemote(context.Context, *FetchRemoteRequest) (*FetchRemoteResponse, error)
	CreateRepository(context.Context, *CreateRepositoryRequest) (*CreateRepositoryResponse, error)
	GetArchive(*GetArchiveRequest, RepositoryService_GetArchiveServer) error
	HasLocalBranches(context.Context, *HasLocalBranchesRequest) (*HasLocalBranchesResponse, error)
	FetchSourceBranch(context.Context, *FetchSourceBranchRequest) (*FetchSourceBranchResponse, error)
	Fsck(context.Context, *FsckRequest) (*FsckResponse, error)
	WriteRef(context.Context, *WriteRefRequest) (*WriteRefResponse, error)
	FindMergeBase(context.Context, *FindMergeBaseRequest) (*FindMergeBaseResponse, error)
	CreateFork(context.Context, *CreateForkRequest) (*CreateForkResponse, error)
	IsRebaseInProgress(context.Context, *IsRebaseInProgressRequest) (*IsRebaseInProgressResponse, error)
	IsSquashInProgress(context.Context, *IsSquashInProgressRequest) (*IsSquashInProgressResponse, error)
	CreateRepositoryFromURL(context.Context, *CreateRepositoryFromURLRequest) (*CreateRepositoryFromURLResponse, error)
	CreateBundle(*CreateBundleRequest, RepositoryService_CreateBundleServer) error
	CreateRepositoryFromBundle(RepositoryService_CreateRepositoryFromBundleServer) error
	WriteConfig(context.Context, *WriteConfigRequest) (*WriteConfigResponse, error)
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	DeleteConfig(context.Context, *DeleteConfigRequest) (*DeleteConfigResponse, error)
	FindLicense(context.Context, *FindLicenseRequest) (*FindLicenseResponse, error)
	GetInfoAttributes(*GetInfoAttributesRequest, RepositoryService_GetInfoAttributesServer) error
	CalculateChecksum(context.Context, *CalculateChecksumRequest) (*CalculateChecksumResponse, error)
	Cleanup(context.Context, *CleanupRequest) (*CleanupResponse, error)
	GetSnapshot(*GetSnapshotRequest, RepositoryService_GetSnapshotServer) error
	CreateRepositoryFromSnapshot(context.Context, *CreateRepositoryFromSnapshotRequest) (*CreateRepositoryFromSnapshotResponse, error)
	GetRawChanges(*GetRawChangesRequest, RepositoryService_GetRawChangesServer) error
	SearchFilesByContent(*SearchFilesByContentRequest, RepositoryService_SearchFilesByContentServer) error
	SearchFilesByName(*SearchFilesByNameRequest, RepositoryService_SearchFilesByNameServer) error
	RestoreCustomHooks(RepositoryService_RestoreCustomHooksServer) error
	BackupCustomHooks(*BackupCustomHooksRequest, RepositoryService_BackupCustomHooksServer) error
	PreFetch(context.Context, *PreFetchRequest) (*PreFetchResponse, error)
	FetchHTTPRemote(context.Context, *FetchHTTPRemoteRequest) (*FetchHTTPRemoteResponse, error)
	GetObjectDirectorySize(context.Context, *GetObjectDirectorySizeRequest) (*GetObjectDirectorySizeResponse, error)
}

func RegisterRepositoryServiceServer(s *grpc.Server, srv RepositoryServiceServer) {
	s.RegisterService(&_RepositoryService_serviceDesc, srv)
}

func _RepositoryService_RepositoryExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositoryExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepositoryExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/RepositoryExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepositoryExists(ctx, req.(*RepositoryExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepackIncremental_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepackIncrementalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepackIncremental(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/RepackIncremental",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepackIncremental(ctx, req.(*RepackIncrementalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepackFull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepackFullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepackFull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/RepackFull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepackFull(ctx, req.(*RepackFullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GarbageCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GarbageCollectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).GarbageCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/GarbageCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).GarbageCollect(ctx, req.(*GarbageCollectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_RepositorySize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositorySizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).RepositorySize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/RepositorySize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).RepositorySize(ctx, req.(*RepositorySizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_ApplyGitattributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyGitattributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).ApplyGitattributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/ApplyGitattributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).ApplyGitattributes(ctx, req.(*ApplyGitattributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FetchRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FetchRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/FetchRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FetchRemote(ctx, req.(*FetchRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CreateRepository(ctx, req.(*CreateRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetArchive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetArchiveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).GetArchive(m, &repositoryServiceGetArchiveServer{stream})
}

type RepositoryService_GetArchiveServer interface {
	Send(*GetArchiveResponse) error
	grpc.ServerStream
}

type repositoryServiceGetArchiveServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceGetArchiveServer) Send(m *GetArchiveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_HasLocalBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasLocalBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).HasLocalBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/HasLocalBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).HasLocalBranches(ctx, req.(*HasLocalBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FetchSourceBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchSourceBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FetchSourceBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/FetchSourceBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FetchSourceBranch(ctx, req.(*FetchSourceBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_Fsck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FsckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).Fsck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/Fsck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).Fsck(ctx, req.(*FsckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_WriteRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).WriteRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/WriteRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).WriteRef(ctx, req.(*WriteRefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FindMergeBase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindMergeBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FindMergeBase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/FindMergeBase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FindMergeBase(ctx, req.(*FindMergeBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_CreateFork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateForkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CreateFork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/CreateFork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CreateFork(ctx, req.(*CreateForkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_IsRebaseInProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsRebaseInProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).IsRebaseInProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/IsRebaseInProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).IsRebaseInProgress(ctx, req.(*IsRebaseInProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_IsSquashInProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsSquashInProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).IsSquashInProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/IsSquashInProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).IsSquashInProgress(ctx, req.(*IsSquashInProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_CreateRepositoryFromURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryFromURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CreateRepositoryFromURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/CreateRepositoryFromURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CreateRepositoryFromURL(ctx, req.(*CreateRepositoryFromURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_CreateBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateBundleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).CreateBundle(m, &repositoryServiceCreateBundleServer{stream})
}

type RepositoryService_CreateBundleServer interface {
	Send(*CreateBundleResponse) error
	grpc.ServerStream
}

type repositoryServiceCreateBundleServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceCreateBundleServer) Send(m *CreateBundleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_CreateRepositoryFromBundle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RepositoryServiceServer).CreateRepositoryFromBundle(&repositoryServiceCreateRepositoryFromBundleServer{stream})
}

type RepositoryService_CreateRepositoryFromBundleServer interface {
	SendAndClose(*CreateRepositoryFromBundleResponse) error
	Recv() (*CreateRepositoryFromBundleRequest, error)
	grpc.ServerStream
}

type repositoryServiceCreateRepositoryFromBundleServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceCreateRepositoryFromBundleServer) SendAndClose(m *CreateRepositoryFromBundleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *repositoryServiceCreateRepositoryFromBundleServer) Recv() (*CreateRepositoryFromBundleRequest, error) {
	m := new(CreateRepositoryFromBundleRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RepositoryService_WriteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).WriteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/WriteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).WriteConfig(ctx, req.(*WriteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_DeleteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).DeleteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/DeleteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).DeleteConfig(ctx, req.(*DeleteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FindLicense_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FindLicense(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/FindLicense",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FindLicense(ctx, req.(*FindLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetInfoAttributes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetInfoAttributesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).GetInfoAttributes(m, &repositoryServiceGetInfoAttributesServer{stream})
}

type RepositoryService_GetInfoAttributesServer interface {
	Send(*GetInfoAttributesResponse) error
	grpc.ServerStream
}

type repositoryServiceGetInfoAttributesServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceGetInfoAttributesServer) Send(m *GetInfoAttributesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_CalculateChecksum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateChecksumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CalculateChecksum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/CalculateChecksum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CalculateChecksum(ctx, req.(*CalculateChecksumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_Cleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).Cleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/Cleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).Cleanup(ctx, req.(*CleanupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetSnapshot_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetSnapshotRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).GetSnapshot(m, &repositoryServiceGetSnapshotServer{stream})
}

type RepositoryService_GetSnapshotServer interface {
	Send(*GetSnapshotResponse) error
	grpc.ServerStream
}

type repositoryServiceGetSnapshotServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceGetSnapshotServer) Send(m *GetSnapshotResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_CreateRepositoryFromSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryFromSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).CreateRepositoryFromSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/CreateRepositoryFromSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).CreateRepositoryFromSnapshot(ctx, req.(*CreateRepositoryFromSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetRawChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRawChangesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).GetRawChanges(m, &repositoryServiceGetRawChangesServer{stream})
}

type RepositoryService_GetRawChangesServer interface {
	Send(*GetRawChangesResponse) error
	grpc.ServerStream
}

type repositoryServiceGetRawChangesServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceGetRawChangesServer) Send(m *GetRawChangesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_SearchFilesByContent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchFilesByContentRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).SearchFilesByContent(m, &repositoryServiceSearchFilesByContentServer{stream})
}

type RepositoryService_SearchFilesByContentServer interface {
	Send(*SearchFilesByContentResponse) error
	grpc.ServerStream
}

type repositoryServiceSearchFilesByContentServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceSearchFilesByContentServer) Send(m *SearchFilesByContentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_SearchFilesByName_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchFilesByNameRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).SearchFilesByName(m, &repositoryServiceSearchFilesByNameServer{stream})
}

type RepositoryService_SearchFilesByNameServer interface {
	Send(*SearchFilesByNameResponse) error
	grpc.ServerStream
}

type repositoryServiceSearchFilesByNameServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceSearchFilesByNameServer) Send(m *SearchFilesByNameResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_RestoreCustomHooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RepositoryServiceServer).RestoreCustomHooks(&repositoryServiceRestoreCustomHooksServer{stream})
}

type RepositoryService_RestoreCustomHooksServer interface {
	SendAndClose(*RestoreCustomHooksResponse) error
	Recv() (*RestoreCustomHooksRequest, error)
	grpc.ServerStream
}

type repositoryServiceRestoreCustomHooksServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceRestoreCustomHooksServer) SendAndClose(m *RestoreCustomHooksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *repositoryServiceRestoreCustomHooksServer) Recv() (*RestoreCustomHooksRequest, error) {
	m := new(RestoreCustomHooksRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RepositoryService_BackupCustomHooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BackupCustomHooksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RepositoryServiceServer).BackupCustomHooks(m, &repositoryServiceBackupCustomHooksServer{stream})
}

type RepositoryService_BackupCustomHooksServer interface {
	Send(*BackupCustomHooksResponse) error
	grpc.ServerStream
}

type repositoryServiceBackupCustomHooksServer struct {
	grpc.ServerStream
}

func (x *repositoryServiceBackupCustomHooksServer) Send(m *BackupCustomHooksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _RepositoryService_PreFetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreFetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).PreFetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/PreFetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).PreFetch(ctx, req.(*PreFetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_FetchHTTPRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchHTTPRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).FetchHTTPRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/FetchHTTPRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).FetchHTTPRemote(ctx, req.(*FetchHTTPRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryService_GetObjectDirectorySize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetObjectDirectorySizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryServiceServer).GetObjectDirectorySize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.RepositoryService/GetObjectDirectorySize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryServiceServer).GetObjectDirectorySize(ctx, req.(*GetObjectDirectorySizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RepositoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.RepositoryService",
	HandlerType: (*RepositoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RepositoryExists",
			Handler:    _RepositoryService_RepositoryExists_Handler,
		},
		{
			MethodName: "RepackIncremental",
			Handler:    _RepositoryService_RepackIncremental_Handler,
		},
		{
			MethodName: "RepackFull",
			Handler:    _RepositoryService_RepackFull_Handler,
		},
		{
			MethodName: "GarbageCollect",
			Handler:    _RepositoryService_GarbageCollect_Handler,
		},
		{
			MethodName: "RepositorySize",
			Handler:    _RepositoryService_RepositorySize_Handler,
		},
		{
			MethodName: "ApplyGitattributes",
			Handler:    _RepositoryService_ApplyGitattributes_Handler,
		},
		{
			MethodName: "FetchRemote",
			Handler:    _RepositoryService_FetchRemote_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _RepositoryService_CreateRepository_Handler,
		},
		{
			MethodName: "HasLocalBranches",
			Handler:    _RepositoryService_HasLocalBranches_Handler,
		},
		{
			MethodName: "FetchSourceBranch",
			Handler:    _RepositoryService_FetchSourceBranch_Handler,
		},
		{
			MethodName: "Fsck",
			Handler:    _RepositoryService_Fsck_Handler,
		},
		{
			MethodName: "WriteRef",
			Handler:    _RepositoryService_WriteRef_Handler,
		},
		{
			MethodName: "FindMergeBase",
			Handler:    _RepositoryService_FindMergeBase_Handler,
		},
		{
			MethodName: "CreateFork",
			Handler:    _RepositoryService_CreateFork_Handler,
		},
		{
			MethodName: "IsRebaseInProgress",
			Handler:    _RepositoryService_IsRebaseInProgress_Handler,
		},
		{
			MethodName: "IsSquashInProgress",
			Handler:    _RepositoryService_IsSquashInProgress_Handler,
		},
		{
			MethodName: "CreateRepositoryFromURL",
			Handler:    _RepositoryService_CreateRepositoryFromURL_Handler,
		},
		{
			MethodName: "WriteConfig",
			Handler:    _RepositoryService_WriteConfig_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _RepositoryService_SetConfig_Handler,
		},
		{
			MethodName: "DeleteConfig",
			Handler:    _RepositoryService_DeleteConfig_Handler,
		},
		{
			MethodName: "FindLicense",
			Handler:    _RepositoryService_FindLicense_Handler,
		},
		{
			MethodName: "CalculateChecksum",
			Handler:    _RepositoryService_CalculateChecksum_Handler,
		},
		{
			MethodName: "Cleanup",
			Handler:    _RepositoryService_Cleanup_Handler,
		},
		{
			MethodName: "CreateRepositoryFromSnapshot",
			Handler:    _RepositoryService_CreateRepositoryFromSnapshot_Handler,
		},
		{
			MethodName: "PreFetch",
			Handler:    _RepositoryService_PreFetch_Handler,
		},
		{
			MethodName: "FetchHTTPRemote",
			Handler:    _RepositoryService_FetchHTTPRemote_Handler,
		},
		{
			MethodName: "GetObjectDirectorySize",
			Handler:    _RepositoryService_GetObjectDirectorySize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetArchive",
			Handler:       _RepositoryService_GetArchive_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateBundle",
			Handler:       _RepositoryService_CreateBundle_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateRepositoryFromBundle",
			Handler:       _RepositoryService_CreateRepositoryFromBundle_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetInfoAttributes",
			Handler:       _RepositoryService_GetInfoAttributes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSnapshot",
			Handler:       _RepositoryService_GetSnapshot_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetRawChanges",
			Handler:       _RepositoryService_GetRawChanges_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchFilesByContent",
			Handler:       _RepositoryService_SearchFilesByContent_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchFilesByName",
			Handler:       _RepositoryService_SearchFilesByName_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RestoreCustomHooks",
			Handler:       _RepositoryService_RestoreCustomHooks_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "BackupCustomHooks",
			Handler:       _RepositoryService_BackupCustomHooks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "repository-service.proto",
}

func init() {
	proto.RegisterFile("repository-service.proto", fileDescriptor_repository_service_dd8087831f1c5f01)
}

var fileDescriptor_repository_service_dd8087831f1c5f01 = []byte{
	// 2823 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x4b, 0x73, 0xdc, 0xc6,
	0xf1, 0x17, 0xf8, 0xda, 0xdd, 0xde, 0x95, 0xb4, 0x1c, 0x52, 0xe4, 0x12, 0x22, 0x45, 0x09, 0x92,
	0x65, 0xfa, 0x45, 0xc9, 0xd4, 0xbf, 0xea, 0xef, 0xca, 0xa3, 0x5c, 0x7c, 0x93, 0x96, 0xf8, 0x08,
	0x48, 0xc5, 0x15, 0x55, 0xb9, 0x60, 0x2c, 0x76, 0x96, 0x8b, 0x2c, 0x16, 0xb3, 0x1e, 0xcc, 0x8a,
	0xa6, 0x4f, 0x39, 0x24, 0x55, 0x3e, 0xa5, 0xe2, 0x93, 0xf3, 0x01, 0xf2, 0x09, 0x72, 0xcb, 0x21,
	0xf7, 0xdc, 0x73, 0xca, 0x57, 0xf1, 0x25, 0xa9, 0x79, 0x2c, 0x06, 0x58, 0x00, 0xb4, 0x52, 0xab,
	0x24, 0x37, 0x4c, 0x77, 0x4f, 0x77, 0x4f, 0x4f, 0xcf, 0xa3, 0x7f, 0x03, 0x68, 0x50, 0xdc, 0x27,
	0x91, 0xcf, 0x08, 0xbd, 0xfa, 0x28, 0xc2, 0xf4, 0xb5, 0xef, 0xe1, 0xf5, 0x3e, 0x25, 0x8c, 0xa0,
	0x99, 0x0b, 0x9f, 0xb9, 0xc1, 0x95, 0x59, 0x8b, 0x3a, 0x2e, 0xc5, 0x2d, 0x49, 0xb5, 0x8e, 0x60,
	0xd1, 0x8e, 0x7b, 0xec, 0x7e, 0xed, 0x47, 0x2c, 0xb2, 0xf1, 0x57, 0x03, 0x1c, 0x31, 0xb4, 0x01,
	0xa0, 0x95, 0x35, 0x8c, 0xfb, 0xc6, 0x5a, 0x75, 0x03, 0xad, 0x4b, 0x2d, 0xeb, 0xba, 0x93, 0x9d,
	0x90, 0xb2, 0x36, 0xa0, 0x91, 0x55, 0x17, 0xf5, 0x49, 0x18, 0x61, 0xb4, 0x00, 0x33, 0x58, 0x50,
	0x84, 0xae, 0xb2, 0xad, 0x5a, 0xd6, 0xb1, 0xe8, 0xe3, 0x7a, 0xdd, 0xc3, 0xd0, 0xa3, 0xb8, 0x87,
	0x43, 0xe6, 0x06, 0xe3, 0xf8, 0x70, 0x17, 0x96, 0x72, 0xf4, 0x49, 0x27, 0xac, 0x00, 0x66, 0x25,
	0x73, 0x6f, 0x10, 0x8c, 0x63, 0x05, 0x3d, 0x84, 0x9b, 0x1e, 0xc5, 0x2e, 0xc3, 0x4e, 0xd3, 0x67,
	0x3d, 0xb7, 0xdf, 0x98, 0x10, 0x83, 0xaa, 0x49, 0xe2, 0x96, 0xa0, 0x59, 0xf3, 0x80, 0x92, 0xd6,
	0x94, 0x0f, 0x7d, 0xb8, 0xb3, 0xef, 0xd2, 0xa6, 0x7b, 0x81, 0xb7, 0x49, 0x10, 0x60, 0x8f, 0xfd,
	0xc7, 0xfd, 0x68, 0xc0, 0xc2, 0xa8, 0x45, 0xe5, 0xcb, 0x0e, 0xdc, 0xda, 0x0e, 0xb0, 0x1b, 0x0e,
	0xfa, 0xe3, 0x84, 0x7c, 0x16, 0x6e, 0xc7, 0x5a, 0x94, 0xe2, 0xe7, 0x70, 0x47, 0x0b, 0x9f, 0xf9,
	0xdf, 0xe0, 0x71, 0xf4, 0x7f, 0x08, 0x0b, 0xa3, 0xca, 0x54, 0x52, 0x21, 0x98, 0x8a, 0xfc, 0x6f,
	0xb0, 0xd0, 0x33, 0x69, 0x8b, 0x6f, 0xab, 0x0b, 0x4b, 0x9b, 0xfd, 0x7e, 0x70, 0xb5, 0xef, 0x33,
	0x97, 0x31, 0xea, 0x37, 0x07, 0x0c, 0x8f, 0x93, 0xd5, 0xc8, 0x84, 0x32, 0xc5, 0xaf, 0xfd, 0xc8,
	0x27, 0xa1, 0x08, 0x6f, 0xcd, 0x8e, 0xdb, 0xd6, 0x32, 0x98, 0x79, 0xc6, 0x54, 0x14, 0xfe, 0x32,
	0x01, 0x68, 0x0f, 0x33, 0xaf, 0x63, 0xe3, 0x1e, 0x61, 0xe3, 0xc4, 0x80, 0x2f, 0x1f, 0x2a, 0x94,
	0x08, 0x17, 0x2a, 0xb6, 0x6a, 0xa1, 0x79, 0x98, 0x6e, 0x13, 0xea, 0xe1, 0xc6, 0xa4, 0x98, 0x78,
	0xd9, 0x40, 0x8b, 0x50, 0x0a, 0x89, 0xc3, 0xdc, 0x8b, 0xa8, 0x31, 0x25, 0x57, 0x5b, 0x48, 0xce,
	0xdd, 0x8b, 0x08, 0x35, 0xa0, 0xc4, 0xfc, 0x1e, 0x26, 0x03, 0xd6, 0x98, 0xbe, 0x6f, 0xac, 0x4d,
	0xdb, 0xc3, 0x26, 0xef, 0x12, 0x45, 0x1d, 0xa7, 0x8b, 0xaf, 0x1a, 0x33, 0xd2, 0x42, 0x14, 0x75,
	0x9e, 0xe3, 0x2b, 0xb4, 0x0a, 0xd5, 0x6e, 0x48, 0x2e, 0x43, 0xa7, 0x43, 0xf8, 0xea, 0x2d, 0x09,
	0x26, 0x08, 0xd2, 0x01, 0xa7, 0xa0, 0x25, 0x28, 0x87, 0xc4, 0xe9, 0xd3, 0x41, 0x88, 0x1b, 0x15,
	0x61, 0xad, 0x14, 0x92, 0x53, 0xde, 0x44, 0xcf, 0xe0, 0xa6, 0xf4, 0xd3, 0xe9, 0xbb, 0xd4, 0xed,
	0x45, 0x0d, 0x10, 0x83, 0xbd, 0xa5, 0x07, 0x2b, 0xe2, 0x52, 0x93, 0x42, 0xa7, 0x42, 0xe6, 0xb3,
	0xa9, 0x72, 0xb9, 0x5e, 0xb1, 0xee, 0xc0, 0x5c, 0x2a, 0x74, 0x2a, 0xa4, 0x47, 0xb0, 0xb8, 0x2d,
	0x72, 0x3b, 0x11, 0xa7, 0x31, 0x52, 0xcb, 0x84, 0x46, 0x56, 0x9d, 0x32, 0xf5, 0x4f, 0x03, 0x66,
	0xf7, 0x31, 0xdb, 0xa4, 0x5e, 0xc7, 0x7f, 0x3d, 0xd6, 0xe4, 0xdd, 0x85, 0x8a, 0x47, 0x7a, 0x3d,
	0x9f, 0x39, 0x7e, 0x4b, 0xcd, 0x5f, 0x59, 0x12, 0x0e, 0x5b, 0x7c, 0x66, 0xfb, 0x14, 0xb7, 0xfd,
	0xaf, 0xc5, 0x14, 0x56, 0x6c, 0xd5, 0x42, 0x9f, 0xc0, 0x4c, 0x9b, 0xd0, 0x9e, 0xcb, 0xc4, 0x14,
	0xde, 0xda, 0xb8, 0x3f, 0x34, 0x92, 0xf1, 0x69, 0x7d, 0x4f, 0xc8, 0xd9, 0x4a, 0x9e, 0xaf, 0x8a,
	0xbe, 0xcb, 0x3a, 0x62, 0x86, 0x6b, 0xb6, 0xf8, 0xb6, 0x9e, 0xc1, 0x8c, 0x94, 0x42, 0x25, 0x98,
	0x7c, 0x75, 0x78, 0x5a, 0xbf, 0xc1, 0x3f, 0xce, 0x37, 0xed, 0xba, 0x81, 0x00, 0x66, 0xce, 0x37,
	0x6d, 0x67, 0xff, 0x55, 0x7d, 0x02, 0x55, 0xa1, 0xc4, 0xbf, 0xb7, 0x5e, 0x6d, 0xd4, 0x27, 0xad,
	0x35, 0x40, 0x49, 0x63, 0x7a, 0xd1, 0xb5, 0x5c, 0xe6, 0x8a, 0xb1, 0xd7, 0x6c, 0xf1, 0xcd, 0xa7,
	0xe5, 0xc0, 0x8d, 0x5e, 0x10, 0xcf, 0x0d, 0xb6, 0xa8, 0x1b, 0x7a, 0x9d, 0xb1, 0x96, 0x9c, 0xf5,
	0x14, 0x1a, 0x59, 0x75, 0xca, 0xfc, 0x3c, 0x4c, 0xbf, 0x76, 0x83, 0x01, 0x56, 0xe7, 0x88, 0x6c,
	0x58, 0x7f, 0x37, 0xa0, 0x21, 0xf2, 0xe5, 0x8c, 0x0c, 0xa8, 0x87, 0x65, 0xaf, 0x71, 0xe6, 0xec,
	0x53, 0x98, 0x8d, 0x84, 0x2a, 0x27, 0xd1, 0x75, 0xa2, 0xb0, 0x6b, 0x5d, 0x0a, 0xdb, 0xa9, 0xad,
	0x59, 0x29, 0x68, 0x0a, 0x67, 0xc4, 0xf4, 0xd6, 0xec, 0x5a, 0x94, 0x70, 0x10, 0xad, 0x00, 0x30,
	0x97, 0x5e, 0x60, 0xe6, 0x50, 0xdc, 0x16, 0x13, 0x5d, 0xb3, 0x2b, 0x92, 0x62, 0xe3, 0xb6, 0xf5,
	0x0c, 0x96, 0x72, 0x06, 0xa5, 0x4f, 0x54, 0x8a, 0xa3, 0x41, 0xc0, 0x86, 0x27, 0xaa, 0x6c, 0x59,
	0x9b, 0x50, 0xdd, 0x8b, 0xbc, 0xee, 0x38, 0xf1, 0x7f, 0x04, 0x35, 0xa9, 0x42, 0xc7, 0x1c, 0x53,
	0x4a, 0xa8, 0x9a, 0x73, 0xd9, 0xb0, 0xfe, 0x6c, 0xc0, 0xed, 0xcf, 0xa9, 0xcf, 0x17, 0x4f, 0x7b,
	0x9c, 0x50, 0xd7, 0x61, 0x92, 0x8f, 0x5e, 0xee, 0xad, 0xfc, 0x33, 0xb5, 0xe5, 0x4e, 0xa6, 0xb7,
	0x5c, 0xf4, 0x00, 0x6a, 0x24, 0x68, 0x39, 0x31, 0x5f, 0x06, 0xad, 0x4a, 0x82, 0x96, 0x3d, 0x14,
	0x89, 0x37, 0xc5, 0xe9, 0xc4, 0xa6, 0xf8, 0xd9, 0x54, 0x79, 0xa6, 0x5e, 0xb2, 0x1a, 0x50, 0xd7,
	0x3e, 0xcb, 0xe1, 0x7d, 0x36, 0x55, 0x36, 0xea, 0x13, 0x56, 0x07, 0xe6, 0xf7, 0xfc, 0xb0, 0x75,
	0x84, 0xe9, 0x05, 0xde, 0x72, 0xa3, 0xb1, 0x56, 0xfc, 0x32, 0x54, 0x86, 0x0e, 0x46, 0x8d, 0x89,
	0xfb, 0x93, 0x7c, 0x5a, 0x63, 0x82, 0xf5, 0x01, 0xdc, 0x19, 0xb1, 0xa4, 0x97, 0x56, 0xd3, 0x8d,
	0x64, 0x6a, 0x57, 0x6c, 0xf1, 0x6d, 0x7d, 0x6b, 0xc0, 0xac, 0xdc, 0xa3, 0xf6, 0x08, 0xed, 0xfe,
	0x2f, 0x53, 0x9a, 0x5f, 0x68, 0x92, 0x9e, 0xc4, 0x97, 0xaa, 0xa5, 0xc3, 0xc8, 0xc6, 0xdc, 0xd9,
	0xc3, 0xf0, 0x94, 0x92, 0x0b, 0x8a, 0xa3, 0x68, 0xcc, 0xed, 0x92, 0x0a, 0x75, 0x89, 0xed, 0x52,
	0x12, 0x0e, 0x5b, 0xd6, 0xcf, 0xc1, 0xcc, 0xb3, 0xa6, 0x02, 0xb8, 0x0a, 0x55, 0x3f, 0x74, 0xfa,
	0x8a, 0xac, 0x16, 0x06, 0xf8, 0xb1, 0xa0, 0x74, 0xf6, 0xec, 0xab, 0x81, 0x1b, 0x75, 0xde, 0x9a,
	0xb3, 0x91, 0x50, 0x97, 0x70, 0x56, 0x12, 0x86, 0xce, 0x66, 0xad, 0xbd, 0xa9, 0xb3, 0x6d, 0xb8,
	0x37, 0x7a, 0x3a, 0xed, 0x51, 0xd2, 0x7b, 0x69, 0xbf, 0x18, 0x73, 0xb9, 0x0d, 0x68, 0xa0, 0x7c,
	0xe5, 0x9f, 0xd6, 0x03, 0x58, 0x2d, 0xb4, 0xa3, 0x26, 0xf9, 0x10, 0xe6, 0xa4, 0xc8, 0xd6, 0x20,
	0x6c, 0x05, 0x63, 0x5d, 0xe7, 0xde, 0x87, 0xf9, 0xb4, 0xaa, 0x6b, 0xce, 0x15, 0x0c, 0x48, 0xac,
	0xd6, 0x6d, 0x12, 0xb6, 0xfd, 0x8b, 0x31, 0xe7, 0xa9, 0x3d, 0x08, 0x02, 0x47, 0x9c, 0x8c, 0x6a,
	0x9e, 0x38, 0xe1, 0x94, 0x9f, 0x8e, 0x1f, 0xc0, 0x5c, 0xca, 0xcc, 0xb5, 0xdb, 0xde, 0xb7, 0x13,
	0x50, 0x3f, 0xc3, 0x6c, 0x7c, 0x97, 0x3e, 0x81, 0x12, 0x0e, 0x19, 0xf5, 0xb1, 0xdc, 0x22, 0xaa,
	0x1b, 0xf7, 0x86, 0x1d, 0x46, 0xd5, 0xaf, 0xef, 0x86, 0x8c, 0x5e, 0xd9, 0x43, 0x71, 0xf3, 0x77,
	0x06, 0x4c, 0x0b, 0x12, 0x9f, 0x4c, 0x7e, 0x65, 0x93, 0x1b, 0x06, 0xff, 0x44, 0x2b, 0x50, 0x11,
	0x47, 0xa2, 0x13, 0x31, 0x2a, 0x07, 0x7a, 0x70, 0xc3, 0x2e, 0x0b, 0xd2, 0x19, 0xa3, 0xe8, 0x01,
	0x54, 0x25, 0xdb, 0x0f, 0xd9, 0xb3, 0x0d, 0xb1, 0xbb, 0x4e, 0x1f, 0xdc, 0xb0, 0x41, 0x10, 0x0f,
	0x39, 0x0d, 0xad, 0x82, 0x6c, 0x39, 0x4d, 0x42, 0x02, 0x79, 0x81, 0x3c, 0xb8, 0x61, 0x4b, 0xad,
	0x5b, 0x84, 0x04, 0x5b, 0x25, 0x75, 0x04, 0x5b, 0x73, 0x30, 0x9b, 0x70, 0x55, 0xa5, 0xca, 0x17,
	0x30, 0xb7, 0x83, 0x03, 0xfc, 0x36, 0x26, 0x0d, 0xc1, 0x54, 0x17, 0x5f, 0xc9, 0xf0, 0x54, 0x6c,
	0xf1, 0x6d, 0x2d, 0xc0, 0x7c, 0x5a, 0xbd, 0x32, 0xeb, 0xf1, 0xc2, 0x2f, 0x62, 0x84, 0xe2, 0xed,
	0x41, 0xc4, 0x48, 0xef, 0x80, 0x90, 0x6e, 0x34, 0xa6, 0x71, 0x91, 0x8f, 0x13, 0x89, 0x7c, 0x5c,
	0x06, 0x33, 0xcf, 0x88, 0x72, 0xe1, 0x18, 0x1a, 0x5b, 0xae, 0xd7, 0x1d, 0xf4, 0xdf, 0x8e, 0x07,
	0xd6, 0x13, 0x58, 0xca, 0xd1, 0x77, 0xcd, 0x72, 0xe9, 0xc2, 0x83, 0xbc, 0x85, 0x3c, 0xf6, 0x9a,
	0xcd, 0x8d, 0xc5, 0x23, 0xb0, 0xae, 0x33, 0xa6, 0x62, 0x72, 0x00, 0x88, 0x9f, 0x75, 0x2f, 0x7c,
	0x0f, 0x87, 0x63, 0x9d, 0xa9, 0xd6, 0x36, 0xcc, 0xa5, 0x34, 0xa9, 0x38, 0x7c, 0x08, 0x28, 0x90,
	0x24, 0x27, 0xea, 0x10, 0xca, 0x9c, 0xd0, 0xed, 0x0d, 0x4f, 0xd0, 0xba, 0xe2, 0x9c, 0x71, 0xc6,
	0xb1, 0xdb, 0x13, 0x53, 0xb4, 0x8f, 0xd9, 0x61, 0xd8, 0x26, 0x9b, 0x6f, 0xa3, 0x38, 0xb4, 0x7e,
	0x0a, 0x4b, 0x39, 0xfa, 0x94, 0x6b, 0xf7, 0x00, 0x74, 0x55, 0xa8, 0x26, 0x2a, 0x41, 0xe1, 0xce,
	0x6c, 0xbb, 0x81, 0x37, 0x08, 0x5c, 0x86, 0xb7, 0x3b, 0xd8, 0xeb, 0x46, 0x83, 0xde, 0x38, 0xce,
	0xfc, 0x3f, 0x2c, 0xe5, 0xe8, 0x53, 0xce, 0x98, 0x50, 0xf6, 0x14, 0x4d, 0x45, 0x27, 0x6e, 0xf3,
	0x49, 0xda, 0xc7, 0xec, 0x2c, 0x74, 0xfb, 0x51, 0x87, 0x8c, 0x03, 0x48, 0x58, 0xef, 0xc1, 0x5c,
	0x4a, 0xd3, 0x35, 0xc9, 0xfa, 0x9d, 0x01, 0x0f, 0xf3, 0x12, 0xe8, 0x2d, 0xb8, 0xc1, 0x6b, 0xd2,
	0x0e, 0x63, 0x7d, 0x47, 0x1f, 0x74, 0x25, 0xde, 0x7e, 0x49, 0x03, 0x7e, 0x10, 0x08, 0x96, 0x3b,
	0x60, 0x1d, 0x55, 0x72, 0x09, 0xd9, 0xcd, 0x01, 0xeb, 0x58, 0x8f, 0xe1, 0xd1, 0xf5, 0x2e, 0xa9,
	0xac, 0xfe, 0x83, 0x01, 0xf3, 0xfb, 0x98, 0xd9, 0xee, 0xe5, 0x76, 0xc7, 0x0d, 0x2f, 0xc6, 0x03,
	0x18, 0x1e, 0xc2, 0xcd, 0x36, 0x25, 0x3d, 0x27, 0x85, 0x32, 0x54, 0xec, 0x1a, 0x27, 0xc6, 0x77,
	0xda, 0x55, 0xa8, 0x32, 0xe2, 0xa4, 0x6e, 0xc5, 0x15, 0x1b, 0x18, 0x19, 0x0a, 0x58, 0x7f, 0x9d,
	0x82, 0x3b, 0x23, 0x2e, 0xa9, 0xe0, 0x1f, 0x40, 0x95, 0xba, 0x97, 0x8e, 0x27, 0xc9, 0x0d, 0x43,
	0x9c, 0x35, 0xef, 0x26, 0xca, 0xc9, 0x6c, 0x9f, 0xf5, 0x98, 0x64, 0x03, 0x8d, 0xb9, 0xe6, 0x3f,
	0x26, 0xa1, 0x12, 0x73, 0xd0, 0x22, 0x94, 0x9a, 0x01, 0x69, 0xf2, 0x8b, 0x8f, 0x4c, 0xa8, 0x19,
	0xde, 0x3c, 0x6c, 0xc5, 0xb0, 0xcc, 0x84, 0x86, 0x65, 0xd0, 0x0a, 0x94, 0x43, 0x7c, 0x29, 0x8f,
	0x5f, 0xe1, 0xfc, 0xd6, 0x44, 0xc3, 0xb0, 0x4b, 0x21, 0xbe, 0xe4, 0x27, 0x30, 0x67, 0xf3, 0x5b,
	0xbd, 0x60, 0x4f, 0x69, 0x36, 0x09, 0x5a, 0x82, 0x7d, 0x02, 0x15, 0xd2, 0xc7, 0xd4, 0x65, 0x7c,
	0xec, 0xd3, 0xa2, 0x1e, 0xfe, 0xf8, 0x0d, 0x07, 0xb0, 0x7e, 0x32, 0xec, 0x68, 0x6b, 0x1d, 0x3c,
	0xe6, 0x3c, 0x26, 0x5a, 0xa9, 0x04, 0x3d, 0x6a, 0xd4, 0xbd, 0x8c, 0xe5, 0x79, 0x16, 0x71, 0xa7,
	0x7a, 0xa4, 0x85, 0x05, 0xee, 0x31, 0x2d, 0x1c, 0x3a, 0x22, 0x2d, 0x2c, 0x40, 0x0f, 0x7c, 0x29,
	0x59, 0x65, 0xc9, 0x0a, 0xf1, 0xa5, 0x60, 0x3d, 0x82, 0x5b, 0xc3, 0x91, 0x3a, 0xcd, 0x2b, 0xbe,
	0xf2, 0x2b, 0xb2, 0xf2, 0x53, 0x63, 0xdd, 0xe2, 0x34, 0x2e, 0x35, 0x1c, 0xb0, 0x92, 0x02, 0x29,
	0xa5, 0x86, 0x2c, 0xa4, 0x2c, 0x1f, 0x2a, 0xda, 0x9d, 0x2a, 0x94, 0x5e, 0x1e, 0x3f, 0x3f, 0x3e,
	0xf9, 0xfc, 0xb8, 0x7e, 0x03, 0x55, 0x60, 0x7a, 0x73, 0x67, 0x67, 0x77, 0x47, 0xd6, 0xef, 0xdb,
	0x27, 0xa7, 0x87, 0xbb, 0x3b, 0xb2, 0x7e, 0xdf, 0xd9, 0x7d, 0xb1, 0x7b, 0xbe, 0xbb, 0x53, 0x9f,
	0x44, 0x35, 0x28, 0x1f, 0x9d, 0xec, 0x1c, 0xee, 0x71, 0xd6, 0x14, 0x67, 0xd9, 0xbb, 0xc7, 0x9b,
	0x47, 0xbb, 0x3b, 0xf5, 0x69, 0x54, 0x87, 0xda, 0xf9, 0xaf, 0x4e, 0x77, 0x9d, 0xed, 0x83, 0xcd,
	0xe3, 0xfd, 0xdd, 0x9d, 0xfa, 0x8c, 0xf5, 0x1a, 0x1a, 0x67, 0xd8, 0xa5, 0x5e, 0x67, 0xcf, 0x0f,
	0x70, 0xb4, 0x75, 0xc5, 0xb7, 0xcb, 0x71, 0xb2, 0x7a, 0x1e, 0xa6, 0xbf, 0x1a, 0x60, 0x55, 0x61,
	0x54, 0x6c, 0xd9, 0x18, 0xd6, 0x7a, 0x93, 0x71, 0xad, 0x67, 0x7d, 0x0c, 0x4b, 0x39, 0x76, 0xf5,
	0x0d, 0xac, 0xcd, 0xc9, 0x22, 0x69, 0x6b, 0xb6, 0x6c, 0x58, 0x7f, 0x32, 0xe0, 0x6e, 0xaa, 0xcf,
	0x36, 0x09, 0x19, 0x0e, 0xd9, 0x7f, 0xc1, 0x5d, 0xf4, 0x1e, 0xd4, 0xbd, 0xce, 0x20, 0xec, 0x62,
	0x5e, 0x82, 0x4a, 0x2f, 0x15, 0xc6, 0x76, 0x5b, 0xd1, 0xe3, 0x4d, 0xe2, 0x0a, 0x96, 0xf3, 0xbd,
	0x54, 0x83, 0x6b, 0x40, 0xa9, 0xe7, 0x32, 0xaf, 0x13, 0x0f, 0x6f, 0xd8, 0x44, 0x2b, 0x00, 0xe2,
	0xd3, 0x49, 0x1c, 0xba, 0x15, 0x41, 0xd9, 0x71, 0x99, 0x8b, 0xee, 0x43, 0x0d, 0x87, 0x2d, 0x87,
	0xb4, 0x1d, 0x41, 0x53, 0xd8, 0x1f, 0xe0, 0xb0, 0x75, 0xd2, 0x3e, 0xe2, 0x14, 0xeb, 0x6f, 0x06,
	0xdc, 0x3e, 0xa5, 0x58, 0x21, 0x68, 0x32, 0x2a, 0xb9, 0xe5, 0x9f, 0xf1, 0x6f, 0x20, 0x1a, 0x9f,
	0xc2, 0x6c, 0x0c, 0x56, 0xbc, 0x49, 0xfd, 0x38, 0xc4, 0x31, 0x62, 0x05, 0xcf, 0xa0, 0x4a, 0x9a,
	0xbf, 0xc6, 0x1e, 0x73, 0xfa, 0xfc, 0x66, 0x39, 0x99, 0xee, 0x7a, 0x22, 0x58, 0xa7, 0x84, 0x04,
	0x36, 0x90, 0xf8, 0xdb, 0x42, 0x50, 0xd7, 0x23, 0x51, 0x91, 0xfd, 0xce, 0x80, 0x19, 0x09, 0x0c,
	0x0e, 0xab, 0x19, 0x23, 0xae, 0x66, 0xf8, 0xee, 0x23, 0xae, 0x00, 0x72, 0x22, 0xc5, 0x37, 0xfa,
	0x09, 0x2c, 0xc5, 0x9b, 0x3e, 0xa1, 0xfe, 0x37, 0x62, 0x41, 0x39, 0x1d, 0xec, 0xb6, 0x30, 0x55,
	0x7b, 0xe9, 0xe2, 0xf0, 0x10, 0x88, 0xf9, 0x07, 0x82, 0x8d, 0xde, 0x81, 0x5b, 0x3d, 0x9f, 0xdf,
	0xfc, 0x1d, 0x8a, 0xdb, 0x3d, 0xb7, 0x1f, 0x35, 0xa6, 0xc4, 0x75, 0xf4, 0xa6, 0xa4, 0xda, 0x92,
	0x68, 0xfd, 0xde, 0x80, 0x05, 0xe1, 0xe5, 0xc1, 0xf9, 0xf9, 0xe9, 0xf8, 0x80, 0xef, 0xe3, 0x14,
	0xe0, 0x9b, 0xc5, 0x4c, 0x87, 0x00, 0x70, 0x02, 0xd1, 0x9d, 0x4c, 0x21, 0xba, 0xd6, 0x12, 0x2c,
	0x66, 0xfc, 0x51, 0xf1, 0x3b, 0x83, 0x95, 0x7d, 0xcc, 0x64, 0xc0, 0x77, 0x7c, 0x8a, 0xbd, 0xb7,
	0x01, 0xd3, 0xff, 0x1f, 0xdc, 0x2b, 0x52, 0x5a, 0x0c, 0xd7, 0x6f, 0xfc, 0xf1, 0xae, 0x78, 0x93,
	0x19, 0xa2, 0xfb, 0xf2, 0xd1, 0x0a, 0x7d, 0x01, 0xf5, 0xd1, 0x97, 0x24, 0xb4, 0x9a, 0xb5, 0x9f,
	0x7a, 0xb2, 0x32, 0xef, 0x17, 0x0b, 0xa8, 0x71, 0xcf, 0xfc, 0xf0, 0xfd, 0xda, 0x44, 0x79, 0x02,
	0x79, 0xc3, 0x77, 0xa0, 0xc4, 0x23, 0x11, 0x4a, 0x76, 0xcf, 0x7d, 0x8f, 0x32, 0x1f, 0x5c, 0x23,
	0xa1, 0x2c, 0x54, 0x7e, 0xf8, 0x7e, 0x6d, 0xba, 0x6c, 0x98, 0xc6, 0xc7, 0xe8, 0x18, 0x40, 0x3f,
	0xff, 0xa0, 0xa5, 0x74, 0xdf, 0xc4, 0x03, 0x94, 0x69, 0xe6, 0xb1, 0xb2, 0xfa, 0x5e, 0xc1, 0xad,
	0xf4, 0x33, 0x0e, 0x5a, 0x89, 0x8f, 0xc0, 0xbc, 0x07, 0x25, 0xf3, 0x5e, 0x11, 0x3b, 0x57, 0x77,
	0xfa, 0x89, 0x45, 0xeb, 0xce, 0x7d, 0xc7, 0xd1, 0xba, 0xf3, 0x5f, 0x66, 0x92, 0xba, 0xdb, 0x80,
	0xb2, 0x6f, 0x24, 0x28, 0x8e, 0x65, 0xe1, 0x63, 0x8d, 0x69, 0x5d, 0x27, 0x92, 0xb5, 0xf3, 0x0b,
	0xa8, 0x26, 0x5e, 0x0c, 0x50, 0x1c, 0xd5, 0xec, 0x0b, 0x8c, 0x79, 0x37, 0x97, 0x97, 0x55, 0xf9,
	0x25, 0xd4, 0x47, 0xaf, 0x83, 0x3a, 0x0d, 0x0b, 0xde, 0x21, 0x74, 0x1a, 0x16, 0xbe, 0x2c, 0x24,
	0x2c, 0x9c, 0x02, 0x68, 0x88, 0x5d, 0x27, 0x49, 0x06, 0xe3, 0xd7, 0x49, 0x92, 0x45, 0xe4, 0x13,
	0xfa, 0x9e, 0x1a, 0x7c, 0xe9, 0x8c, 0x62, 0xe7, 0xda, 0xe7, 0x02, 0x90, 0x5e, 0xfb, 0x5c, 0x04,
	0xbb, 0x27, 0x97, 0x4e, 0x06, 0x92, 0xd6, 0x4b, 0xa7, 0x08, 0x82, 0xd7, 0x4b, 0xa7, 0x10, 0xcf,
	0x4e, 0x46, 0xe5, 0x67, 0x30, 0xb5, 0x17, 0x79, 0x5d, 0x34, 0x17, 0xf7, 0xd2, 0x80, 0xb6, 0x39,
	0x9f, 0x26, 0x66, 0x7b, 0x1f, 0x40, 0x79, 0x08, 0xf1, 0xa2, 0xc5, 0xa1, 0xf0, 0x08, 0x50, 0x6d,
	0x36, 0xb2, 0x8c, 0xac, 0xa6, 0x73, 0xb8, 0x99, 0x02, 0x6a, 0xd1, 0x72, 0x6c, 0x3b, 0x07, 0x29,
	0x36, 0x57, 0x0a, 0xb8, 0x23, 0x21, 0x3c, 0x06, 0xd0, 0x30, 0xaa, 0x9e, 0xf3, 0x0c, 0xc8, 0xab,
	0xe7, 0x3c, 0x07, 0x75, 0x4d, 0x78, 0xe9, 0x01, 0xca, 0x42, 0xa2, 0x7a, 0x81, 0x15, 0x82, 0xb3,
	0x7a, 0x81, 0x15, 0x23, 0xaa, 0x89, 0x79, 0x47, 0x59, 0x28, 0x33, 0x69, 0xa4, 0x00, 0x54, 0x4d,
	0x1a, 0x29, 0x42, 0x42, 0x63, 0x23, 0x83, 0xec, 0xeb, 0x9e, 0x02, 0x22, 0xd1, 0xe3, 0xa2, 0x55,
	0x95, 0x46, 0x44, 0xcd, 0x77, 0x7f, 0x54, 0x2e, 0x1b, 0xc0, 0x97, 0x50, 0x4b, 0x22, 0x92, 0xe8,
	0x6e, 0x5a, 0x47, 0x0a, 0x3e, 0x31, 0x97, 0xf3, 0x99, 0x4a, 0x6b, 0xf9, 0x87, 0xef, 0xd7, 0xa6,
	0xca, 0x46, 0xdd, 0x78, 0x6a, 0xa0, 0xdf, 0x18, 0x60, 0x16, 0x23, 0x24, 0xe8, 0xbd, 0xeb, 0x3c,
	0x4d, 0xdb, 0x7c, 0xff, 0x4d, 0x44, 0x33, 0xe3, 0x5a, 0x33, 0xf8, 0x9e, 0x98, 0x00, 0x36, 0xf5,
	0x9e, 0x98, 0x05, 0x55, 0xf5, 0x9e, 0x98, 0x83, 0x84, 0x26, 0x83, 0xf5, 0x1c, 0x2a, 0x31, 0xe6,
	0x87, 0x1a, 0x45, 0x88, 0xa5, 0xb9, 0x94, 0xc3, 0xc9, 0x5b, 0x60, 0xb5, 0x24, 0x98, 0xa7, 0x23,
	0x9f, 0x83, 0x20, 0xea, 0xc8, 0xe7, 0xe2, 0x7f, 0xa9, 0x93, 0xb7, 0x9a, 0x40, 0x8a, 0x12, 0x27,
	0x41, 0x06, 0x88, 0x4a, 0x9c, 0x04, 0x59, 0x68, 0x29, 0x4e, 0xcb, 0xa6, 0x78, 0x08, 0x4e, 0x83,
	0x3c, 0x28, 0xf9, 0x1e, 0x9b, 0x8b, 0x27, 0xe9, 0x3d, 0xaf, 0x10, 0x21, 0x1a, 0x5a, 0x78, 0x6a,
	0xa0, 0x2f, 0x61, 0x36, 0x83, 0xdd, 0x68, 0x1b, 0x45, 0x30, 0x91, 0xb6, 0x51, 0x08, 0xfc, 0xc4,
	0xa3, 0xd8, 0x85, 0x92, 0xfa, 0x4d, 0x03, 0x2d, 0xc4, 0xbd, 0x52, 0x7f, 0x7f, 0x98, 0x8b, 0x19,
	0x7a, 0xde, 0x89, 0x55, 0x4d, 0x20, 0x3c, 0x28, 0x79, 0x2e, 0x8d, 0x20, 0x37, 0x3a, 0xb8, 0x39,
	0x90, 0x50, 0x62, 0xe8, 0xbf, 0x35, 0x60, 0xf9, 0x3a, 0xd4, 0x05, 0x7d, 0x70, 0x5d, 0xfa, 0x8f,
	0x1a, 0xfd, 0xf0, 0xcd, 0x84, 0xb3, 0x03, 0xfb, 0x25, 0xdc, 0x4c, 0x41, 0x09, 0x7a, 0xb3, 0xcf,
	0x43, 0x7a, 0xf4, 0x66, 0x9f, 0x8b, 0x3f, 0x24, 0x86, 0xd7, 0x85, 0xf9, 0xbc, 0x32, 0x10, 0x3d,
	0xd4, 0x2b, 0xa4, 0xb0, 0x94, 0x35, 0x1f, 0x5d, 0x2f, 0x94, 0x31, 0xd6, 0x84, 0xd9, 0x4c, 0x35,
	0xad, 0xd3, 0xa8, 0xa8, 0xc0, 0xd7, 0x69, 0x54, 0x58, 0x8a, 0x27, 0x6c, 0x74, 0x00, 0x65, 0x41,
	0x70, 0x94, 0xb8, 0x1c, 0x17, 0xa0, 0xf0, 0xfa, 0x28, 0xb8, 0x06, 0x43, 0x4f, 0x6d, 0x5f, 0x4d,
	0x98, 0xcd, 0x00, 0xe0, 0x7a, 0x34, 0x45, 0x58, 0xbb, 0x1e, 0x4d, 0x21, 0x7a, 0x9e, 0x18, 0xcd,
	0x01, 0x94, 0x87, 0xf5, 0xa5, 0xbe, 0x2d, 0x8c, 0xd4, 0xce, 0xfa, 0xb6, 0x90, 0x29, 0x45, 0x13,
	0x09, 0xf4, 0x05, 0xdc, 0x1e, 0x29, 0xb8, 0xd0, 0xbd, 0xd4, 0xb5, 0x27, 0x53, 0x19, 0x9a, 0xab,
	0x85, 0xfc, 0xac, 0x7a, 0x02, 0x0b, 0xf9, 0xf5, 0x15, 0x7a, 0x27, 0x91, 0x8a, 0xc5, 0x45, 0x9d,
	0xf9, 0xf8, 0xc7, 0xc4, 0xd2, 0xb1, 0xd9, 0x7a, 0xfa, 0x8a, 0x77, 0x08, 0xdc, 0xe6, 0xba, 0x47,
	0x7a, 0x4f, 0xe4, 0xe7, 0x47, 0x84, 0x5e, 0x3c, 0x91, 0x6a, 0x3e, 0x12, 0xff, 0x10, 0x3e, 0xb9,
	0x20, 0xaa, 0xdd, 0x6f, 0x36, 0x67, 0x04, 0xe9, 0xd9, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0d,
	0xa5, 0xe8, 0xba, 0x88, 0x28, 0x00, 0x00,
}
