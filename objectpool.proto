syntax = "proto3";

package gitaly;

option go_package = "gitlab.com/gitlab-org/gitaly-proto/go/gitalypb";

import "shared.proto";

service ObjectPoolService {
  rpc CreateObjectPool(CreateObjectPoolRequest) returns (CreateObjectPoolResponse) {}
  rpc DeleteObjectPool(DeleteObjectPoolRequest) returns (DeleteObjectPoolResponse) {}

  // Repositories are assumed to be stored on the same disk
  rpc LinkRepositoryToObjectPool(LinkRepositoryToObjectPoolRequest) returns (LinkRepositoryToObjectPoolResponse) {}
  rpc UnlinkRepositoryFromObjectPool(UnlinkRepositoryFromObjectPoolRequest) returns (UnlinkRepositoryFromObjectPoolResponse) {}

  rpc ReduplicateRepository(ReduplicateRepositoryRequest) returns (ReduplicateRepositoryResponse) {}
  rpc DisconnectGitAlternates(DisconnectGitAlternatesRequest) returns (DisconnectGitAlternatesResponse) {}
}

// Creates an object pool from the repository. The client is responsible for
// joining this pool later with this repository.
message CreateObjectPoolRequest {
  option (op_type).op = MUTATOR;

  ObjectPool object_pool = 1;
  Repository origin = 2;
}
message CreateObjectPoolResponse {}

// Removes the directory from disk, caller is responsible for leaving the object
// pool before calling this RPC
message DeleteObjectPoolRequest {
  option (op_type).op = MUTATOR;

  ObjectPool object_pool = 1;
}
message DeleteObjectPoolResponse {}

message LinkRepositoryToObjectPoolRequest {
  option (op_type).op = MUTATOR;

  ObjectPool object_pool = 1;
  Repository repository = 2;
}
message LinkRepositoryToObjectPoolResponse {}

// This RPC doesn't require the ObjectPool as it will remove the alternates file
// from the pool participant. The caller is responsible no data loss occurs.
message UnlinkRepositoryFromObjectPoolRequest {
  option (op_type).op = MUTATOR;

  Repository repository = 1;
  ObjectPool object_pool = 2;
}
message UnlinkRepositoryFromObjectPoolResponse {}

message ReduplicateRepositoryRequest {
  option (op_type).op = MUTATOR;

  Repository repository = 1;
}
message ReduplicateRepositoryResponse {}

message DisconnectGitAlternatesRequest {
  option (op_type).op = MUTATOR;

  Repository repository = 1;
}

message DisconnectGitAlternatesResponse {}
