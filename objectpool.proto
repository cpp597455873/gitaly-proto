syntax = "proto3";

package gitaly;

import "shared.proto";

service ObjectPoolService {
  rpc CreateObjectPool(CreateObjectPoolRequest) returns (CreateObjectPoolResponse) {}
  rpc DeleteObjectPool(DeleteObjectPoolRequest) returns (DeleteObjectPoolResponse) {}

  // Repositories are assumed to be stored on the same disk
  rpc LinkRepositoryToObjectPool(LinkRepositoryToObjectPoolRequest) returns (LinkRepositoryToObjectPoolResponse) {}
  rpc UnlinkRepositoryFromObjectPool(UnlinkRepositoryFromObjectPoolRequest) returns (UnlinkRepositoryFromObjectPoolResponse) {}
}

// Creates an object pool from the repository. The client is responsible for
// joining this pool later with this repository.
message CreateObjectPoolRequest {
  Repository object_pool = 1;
  Repository origin = 2;
}
message CreateObjectPoolResponse {}

// Removes the directory from disk, callee is responsible for leaving the object
// pool before calling this RPC
message DeleteObjectPoolRequest {
  Repository object_pool = 1;
}
message DeleteObjectPoolResponse {}

message LinkRepositoryToObjectPoolRequest {
  Repository object_pool = 1;
  Repository repository = 2;
}
message LinkRepositoryToObjectPoolResponse {}

message UnlinkRepositoryFromObjectPoolRequest {
  Repository object_pool = 1;
  Repository repository = 2;
}
message UnlinkRepositoryFromObjectPoolResponse {}
